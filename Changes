Change history for libwww-perl

{{$NEXT}}
    - Continue trying different Authentication challenge schemes if 
      credentials are wrong (Roman Galeev, Julien Fiegehenn)

6.42      2019-11-20 17:40:52Z
    - Add retry handling for a stale nonce with digest authentication (marmotil
      and Frank Maas) (GH#40, GH#313, GH#321)
    - Add the patch method to LWP::UserAgent. (GH#334) (Chase Whitener)
    - Fix docs to match keep_alive => undef behavior, add some trivial tests
      (GH#333) (Ville Skyttä)
    - Documentation grammar fixes (GH#331) (Ville Skyttä)

6.41      2019-10-28 14:42:06Z
    - Allow mirroring to files called '0' (GH#329) (Mark Fowler)

6.40      2019-10-24 12:55:45Z
    - Let Digest authentication act on nonce expiry (GH#313) (Frank Maas)
    - Make file arg for mirror mandatory #304 (GH#326) (Julien Fiegehenn)
    - Doc fix: fields starting with ":" have to be quoted (GH#324) (Slaven
      Rezić)
    - Fix documentation for removing all handlers (GH#319) (leedo)
    - Ensure proper version of Dist::Zilla::Plugin::MakeMaker::Awesome
    - Add TravisCI testing for Perl v5.30
    - Clean up .perltidyrc

6.39      2019-05-06 14:18:39Z
    - Document current best practices (GH#314) (Olaf Alders)
    - Document order in which handlers fire (GH#315) (Olaf Alders)
    - SKIP nntp test for now (GH#317) (Olaf Alders)

6.38      2019-03-25 18:58:58Z
    - Update Net::HTTP dependency from 6.07 to 6.18 (GH#310) (Olaf Alders)
    - Remove s.c.o. from SYNOPSIS (GH#308) (Olaf Alders)

6.37      2019-03-06 20:49:26Z
    - Improve ->add_handler documentation (GH #272) (Julien Fiegehenn)
    - Alter our rule set to allow IPv6 proxy hosts beginning with [. (GH #237)
    - Add a jigsaw test for 307 redirects (GH#285) (Nik LaBelle)

6.36      2018-10-10 02:20:58Z
    - fix broken link https://metacpan.org/pod/LWP::Simple by fixing pod
      header (thanks for the report, traumschule!)

6.35      2018-07-16 04:48:54Z
    - fix file descriptor leak in LWP::Protocol (introduced in version 6.17)
      that occurs for perl versions earlier than 5.18. (GH #296)

6.34      2018-06-05 18:48:59Z
    - timeout() documentation has more details about the response (thanks,
      Andrew Grangaard!)
    - HTTP::Status is now upgraded to 6.18 if 6.17 is installed (which had a
      bug).

6.33      2018-02-27 03:51:36Z
    - Fix send_te change from previous release, which was breaking
      LWP::Parallel::UserAgent and Test::Override::UserAgent (GH #281) (Doug
      Bell)

6.32      2018-02-20 19:39:20Z
    - Suggest LWP::ConsoleLogger as an alternative to the deprecated LWP::Debug
      (GH#278) (Olaf Alders)
    - add send_te configuration to disable sending the TE header (GH#126)
      (Doug Bell)
    - Added a developer feature to the http.t tests. (GH#257) (colinnewell)

6.31      2017-12-11 01:55:53Z
    - fix version numbering (RT#123841)

6.30      2017-12-07
    - Use tr/// instead of s/// where appropriate (Ville Skyttä) (GH #265)
    - Use parent -norequire instead of base to not look for external
      dependencies (Fabian Zeindler) (GH #259)
    - Fix run_handlers to allow assigning to the request / response (Gianni
      Ceccarelli) (GH #274)

6.29      2017-11-06
    - Fix some version numbers

6.28      2017-11-06
    - Remove last use of Geopt::Std (Sergey Remanov) (GH #267)
    - Include unmatched connect error in status string (Patrik Lundin) (GH
      #269)
    - Fix insecure open FILEHANDLE,EXPR (Takumi Akiyama) (GH #270)

6.27      2017-09-21
    - Switch to Getopt::Long in lwp-download (GH #262)
    - Fix lwp-request -C (GH #261)
    - Hide LWP::Protocol::http::Socket, LWP::Protocol::http::SocketMethods and
      LWP::Debug::TraceHTTP::Socket from PAUSE
    - Add tests for the "get" & "head" functions (GH #252)
    - Update lwpcook.pod (GH #256)
    - Handle undefined values in ->credentials (GH #157)
    - Fix lwp-mirror options checks.
    - Update bin/ scripts to use $LWP::VERSION instead of ->Version()
    - Improve lwp-download --help (GH #262)

6.26      2017-04-12
    - Perltidy all apps in the bin/ directory
    - Make all apps in bin/ use strict and warnings (RT #92633)
    - Fix bug tracker URL in metadata

6.25      2017-04-03
    - Fix LWP::UserAgent docs for request and request_simple that pointed to
      functions in LWP::Simple rather than LWP::UserAgent
    - Moved the official bug tracker to GitHub rather than RT.

6.24      2017-03-14
    - Document clone methods inability to clone cookie jars (RT #13542)
    - It is now possible to set the proxy and no_proxy attributes from the
      constructor of LWP::UserAgent. (GH #124)

6.23      2017-03-06
    - Fix bug where Protocol::NNTP called undef on a variable before being done
      using it. (GH PR #121)
    - Ran perltidy on LWP::Protocol::NNTP
    - Re-organized current documentation set.

6.22      2017-03-01
    - Update Travis-CI to test on minimum versions of prereqs. (GH PR #109)
    - Fix tests that depended on a newer version of HTTP::Message (GH PR #119)
    - Update documentation to reflect behavior difference in ->put() depending
      on the version of HTTP::Message installed. (GH PR #120)

6.21      2017-02-21
    - Ensure that LWP::Simple re-exports some HTTP::Status functions

6.20      2017-02-21
    - Converted to use Dist::Zilla
    - Moved several tests to xt/author

6.19    2017-02-14
    - Call HTTP::Status constant functions without & (GH#110)
    - Make bin scripts use LWP's version and not maintain their own (PR #54)
    - Fix bug triggered in some cases of auth challenges not having a viable
      protocol (PR#111)
    - Remove usage of the 'vars' pragma (GH#113)

6.18    2017-02-03
    - Update "timeout" when reusing sockets (PR#90)
    - Fix bug triggered when calling simple_request() with a malformed URL
      (PR#108)

6.17    2017-01-31
    - Noted another protocol failure message (PR#65)
    - Removed old use of UNIVERSAL::isa() and swapped evals for Try::Tiny (PR#105)
    - Standardized the Changes file (GH#106)
    - Fixed documentation error in lwp-request.

6.16    2017-01-18
    - Moved LWP::Protocol::GHTTP into its own dist and removed from here (PR#81)
    - Updated test suite to use strict/warnings and Test::More (PR#88)
    - Additional tests for UserAgent coverage (PR#79)
    - Cleaned up documentation formatting and fixed several typos (PR#87, PR#93)
    - Stop promoting use of HTTP::Cookies and instead use HTTP::CookieJar::LWP
      (PR#102)
    - Added some new documentation to UserAgent and tutorial (PR#68)
    - Allow default header to carry over when using ->post() in UA (PR#100)

6.15    2015-12-15
    - tests now use localhost rather than a net-accessible address (PR#76,
      RT#94959)
    - fixed some tests to do what they intended (regex rather than boolean
      checks) (from PR#28)
    - conversion of some tests from Test.pm to Test::More (from PR#29)
    - use File::Temp for randomized tempdir (PR#53)

6.13    2015-02-14
    - fixed Makefile.PL compatibility with older ExtUtils::MakeMaker (from
        release 6.12)

6.12    2015-02-13
    - fixed prereq declarations in release 6.11

6.11    2015-02-13
    - cleanup of the test running mechanism; allowing greater flexibility and
        should also resolve RT#102083

6.10    2015-02-12
    - lower runtime prereqs recommendation on LWP::Protocol::https to suggests,
        to work around a circular dependency in CPAN clients when the 'install
        recommendations' option is enabled (RT#101732)

6.09    2015-02-09
    - checks for EINTR now also check EWOULDBLOCK (they sometimes differ on
        MSWin32)
    - fixed pod syntax
    - Fixed checking the % character in address regex
    - Improved regex for literal IPv6 addresses

6.08    2014-07-24
    - Requiring Net::HTTP 6.07 to fix IPv6 support (RT#75618 and
        https://github.com/libwww-perl/net-http/pull/10)
    - When the hostname is an IPv6 literal, encapsulate it with [brackets]
        before calling Net::HTTP  [rt.cpan.org #29468]
    - Extra steps to make sure that the host address that has a ":" contains
        only characters appropriate for an IPv6 address.
    - Fix doc typo for cookie_jar

6.07    2014-07-01
    - Removed Data::Dump references in test suite and dependency in Makefile.PL
    - Added MANIFEST.SKIP to enable "make manifest".
    - release script now checks for MacOS to avoid incompatible tarballs
    - Bumped version number to 6.07
    - Fixed gnu-incompatible tarball problem ([rt.cpan.org #94844])

6.06    2014-04-16
    - Merge pull request #44 from dsteinbrunner/master
    - Spelling fixes.
    - Merge pull request #55 from oalders/master
    - Merge pull request #38 from mbeijen/typo-sting
    - Merge pull request #43 from dsteinbrunner/master
    - Spelling corrections
    - Typo fixes.
    - correct behavior for https_proxy,
        - e.g. don't send plain https:// requests to proxy, but instead
            establish CONNECT tunnel and then send requests inside tunnel. This
            change does together with a change in LWP::Protocol::https. The
            change supports LWP::Protocol::https with the default IO::Socket::SSL
            backend, but also with Net::SSL. Also:
            - proxy authorization is supported (http://user:pass@host:port as
                proxy URL, Net::SSL still needs special HTTPS_PROXY_* ENV
                variables, as before)
            - CONNECT request does not need to be the first request inside the
                tunnel (not with Net::SSL)
            - conn_cache is read and written inside request(), instead of
                writing in request() and reading in _new_socket(). If a https
                tunnel is established the cache_key no longer depends only on
                proxy host,port but also on the tunnel endpoint
            - CONNECT is a proxy request and must always use Proxy-Authorization,
                not Authorization header
    - fix: auth-header of Digest auth did not conform to
    - RFC 2617 when WWW-Authenticate has 'qop' parameter.
    - SSL libs might trigger ENOTTY on read
    - Small typo.

6.05    2013-03-11
    - Derive message from status code if it was not provided
    - Merge pull request #33 from tomhukins/fix-readme
    - fix typo in comment
    - Spelling fixes.
    - Spelling fix.
    - Merge pull request #34 from berekuk/fix-github-path
    - Update repo URL
    - With Net::HTTP 6.04 we don't need our own can_read() and sysread override
    - $ENV{HTTP_PROXY} might override our test setup [RT#81381]
    - fix github url in perldoc
    - * Pod is utf-8
    - Match required perl in Makefile.PL
    - Fix Github URLs

6.04    2012-02-18
    - Typo fix; envirionment [RT#72386]
    - Implement $ua->is_online test
    - Add separate option to enable the live jigsaw tests
    - Merge pull request #10 from trcjr/master
    - now with put and delete helpers
    - updated POD
    - unit tests for ua->put and ua->delete
    - These modules work with 5.8.1

6.03    2011-10-15
    - Link updates.
    - Attribute documentation wording improvements.
    - Don't parse robots.txt response content unless it's textual.
    - Decode robots.txt response content before attempting to parse it.
    - RobotUA robots.txt response parsing cleanups.
    - Don't parse HEAD of robots.txt responses.
    - Request handler doc grammar fixes.
    - Pass on HTTP/1.0 if set as request protocol
    - Remove outdated docs (not touched since 1996 :-)
    - Merge pull request #22 from madsen/RT67947-verify_hostname
    - PERL_LWP_ENV_PROXY tweaks
    - lwp-request didn't respect -H Content-type [RT#70488]
    - lwp-request -H didn't allow repeated headers
    - verify_hostname defaults to 0 if ssl_opts provided [RT#67947]
    - Test verify_hostname setting
    - Fix expect header support to work with content refs.
    - add PERL_LWP_ENV_PROXY env variable to enable env_proxy globally

6.02    2011-03-27
    - This is the release where we try to help the CPAN-toolchain be able to
        install the modules required for https-support in LWP. We have done this
        by unbundling the LWP::Protocol::https module from the libwww-perl
        distribution. In order to have https support you now need to install
        (or depend on) 'LWP::Protocol::https' and then this will make sure that
        all the prerequisite modules comes along. See [RT#66838].
    - This release also removes the old http10 modules that has really been
        deprecated since v5.60. These should have been removed at the v6.00
        jump, but I forgot.
    - Ignores env variables when ssl_opts provided [RT#66663]
    - Fix typo; Authen::NTLM [RT#66884]
    - Support LWP::ConnCache->new(total_capacity => undef)

6.01    2011-03-09
    - Add missing HTTP::Daemon dependency for the tests.

6.00    2011-03-08
    - Unbundled all modules not in the LWP:: namespace from the distribution.
        The new broken out CPAN distributions are
        File-Listing, HTML-Form, HTTP-Cookies, HTTP-Daemon, HTTP-Date,
        HTTP-Message, HTTP-Negotiate, Net-HTTP, and WWW-RobotRules.
        libwww-perl-6 require these to be installed.
    - This release also drops the unmaintained lwp-rget script from the distribution.
    - Perl v5.8.8 or better is now required. For older versions of perl please
        stay with libwww-perl-5.837.
    - For https://... default to verified connections with require
        IO::Socket::SSL and Mozilla::CA modules to be installed. Old behaviour
        can be requested bysetting the PERL_LWP_SSL_VERIFY_HOSTNAME environment
        variable to 0. The LWP::UserAgent got new ssl_opts method to control
        this as well.
    - Support internationalized URLs from command line scripts and in the proxy
        environment variables.
    - The lwp-dump script got new --request option.
    - The lwp-request script got new -E option, contributed by Tony Finch.
    - Protocol handlers and callbacks can raise HTTP::Response objects as
        exceptions. This will abort the current request and make LWP return the
        raised response.

5.837   2010-09-20
    - Fix for Encode 2.40
    - Fix Perl syntax error in synopsis
    - Allow ISO 8601 date strings when parsing Apache file listings

5.836   2010-05-13
    - Fix problem where $resp->base would downcase its return value

5.835   2010-05-05
    - simple string can be simplified
    - Make $mess->decoded_content remove XML encoding declarations [RT#52572]
    - Don't allow saving to filenames starting with '.' suggested by server
    - Avoid race between testing for existence of output file and opening the file
    - Minor doc fixup -- wrongly ucfirsted word
    - Use decoded_content in HTTP:Response synopsis [RT#54139]
    - sun.com is no more. rip!
    - Trivial layout tweak to reduce variable scope.
    - Add 'make test_hudson' target
    - Implement alt_charset parameter for decoded_content()
    - Test decoding with different charset parameters
    - lwp-download now needs the -s option to honor the Content-Disposition header
    - Make LWP::MediaTypes::media_suffix case insensitive.
    - Skip XML decoding tests if XML::Simple is not available.
    - Documentation fixes.
    - Fix m_media_type => "xhtml" matching.
    - Make parse_head() apply to data: requests.
    - Documentation spelling fixes.
    - Documentation grammar fixes.
    - Use $uri->secure in m_secure if available.
    - Fix handling of multiple (same) base headers, and parameters in them.
    - Strip out empty lines separated by CRLF
    - Best Practice: avoid indirect object notation
    - Speed up as_string by 4% by having _sorted_field_names return a reference
    - Speed up scan() a bit. as_string() from this branch is now 6% faster
    - Port over as_string() optimizations from HTTP::Headers::Fast
    - Link to referenced documentation.
    - Update repository location.
    - Remove needless (and actually harmful) local $_
    - "Perl & LWP" is available online

5.834   2009-11-21
    - Check for sane default_headers argument [RT#50393]
    - Add $ua->local_address attribute [RT#40912]
    - Test that generation of boundary works [RT#49396]
    - Page does not display the "standard" apache listing any more
    - Remove unneeded executable permissions.
    - Switch compression/decompression to use the IO::Compress/IO::Uncompress
        and Compress::Raw::Zlib family of modules.
    - lwp-request should use stderr for auth [RT#21620]

5.833   2009-10-06
    - Deal with cookies that expire far into the future [RT#50147]
    - Deal with cookies that expire at or before epoch [RT#49467]
    - Pass separate type for https to LWP::ConnCache [RT#48899]
    - Improved handling of the User-Agent header [RT#48461]
    - HTTP::Cookies add_cookie_header previous Cookies [RT#46106]
    - Improve diagnostics from LWP::UserAgent::mirror [RT#48869]
    - mirror should die in case X-Died is set [RT#48236]
    - Increase default Net::HTTP max line length to 8k.

5.832   2009-09-21
    - Fix net test suite.
    - Comment spelling fixes.
    - Fix links to old Netscape cookie specification.
    - Documentation spelling fixes.
    - Improve max line length exceeded/read error messages.
    - Do not warn about seemingly wellformed but unrecognized robots.txt lines.
    - $mess->content_charset would fail for empty content
    - Further restrict what variables env_proxy() process

5.831   2009-08-13
    - Fix bzip2 content encoding/decoding.
    - send_te() doc grammar fix.
    - Document time2str() behavior with an undefined argument.
    - HTML::Message's content_charset trigger warnings from HTML::Parser [RT#48621]

5.830   2009-07-26
    - select doesn't return undef on failure [RT#32356]
    - Add raw RFC 1951 deflate test case.

5.829   2009-07-07
    - This release removes callback handlers that were left over on the returned
        HTTP::Responses. This was problematic because it created reference loops
        preventing the Perl garbage collector from releasing their memory.
        Another problem was that Storable by default would not serialize these
        objects any more.
    - This release also adds support for locating HTML::Form inputs by id or
        class attribute; for instance $form->value("#foo", 42) will set the
        value on the input with the ID of "foo".
    - Make the example code 'use strict' clean by adding a my
    - Avoid cycle in response
    - Clean up handlers has from response after data processing is done
    - Support finding inputs by id or class in HTML::Form
    - Test HTML::Form selectors
    - Tidy and document the internals of mirror() better [RT#23450]
    - Avoid warnings from HTML::Form [RT#42654]

5.828   2009-06-25
    - A quick new release to restore compatibility with perl-5.6.
    - Less noisy behaviour when we can't download the documents
    - Restore perl-5.6 compatibility [RT#47054]
    - Don't decode US-ASCII and ISO-8859-1 content
    - Some versions of Encode don't support UTF-16-BE [RT#47152]
    - Spelling fixes.

5.827   2009-06-15
    - The main news this time is better detection of what character set the
        document in a response uses and the addition of the lwp-dump script that
        I found useful.
    - Added lwp-dump script
    - Replace calls to $req->url with $req->uri
    - Also need to encode strings in the latin1 range
    - Ignore the value set for file inputs [RT#46911]
    - Add docs to lwp-dump
    - Don't let lwp-dump follow redirects
    - Support --method options
    - Implement the --agent option
    - Dictionary order for the option docs; document --method
    - Merge branch 'dump'
    - Files are passed as an array and we must not stringify it.
    - Add content_charset method to HTTP::Message
    - Start guessing the charset for a message
    - Let content_charset guess the charset to use for decoded_content
    - Specify what's missing for the XML and HTML case
    - Provide charset parameter for HTML::Form->parse()
    - Make content_charset sniff for <meta> elements specifying the charset.
    - Determine charset of XML documents
    - Get rid of the _trivial_http_get() implementation
    - Update the bundled media.types file
    - LWP::Simple::get() now returns decoded_content [RT#44435]
    - Implement content_type_charset method for HTTP::Headers
    - Implement content_is_text method for HTTP::Headers
    - Make use of content_is_text and content_type_charset in decoded_content
    - Don't let the parse_head callback append to the HTTP headers
    - Don't set Range header on request when max_size is used [RT#17208]
    - Still show client headers for internal responses
    - Document Client-Warning: Internal response
    - Don't use 'no' as example domain for no_proxy docs [RT#43728]
    - Drop exit from the Makefile.PL [RT#43060]
    - Merge branch 'content_charset'
    - Support "accept-charset" attribute in HTML::Form
    - new tests for max_size and 206 responses [RT#46230]
    - Reformulation of Client-Warning: Internal documentation

5.826   2009-04-24
    - Avoid returning stale Content-Type header after message parts have been updated
    - Don't let content saved to file be affected by the $\ setting
    - Issues around multipart boundaries [RT#28970]
    - Ignore random _proxy env variables, allow only valid schemes
    - README.SSL is not anymore available at the linpro.no URL.
    - Make LWP::UserAgent constructor honor the default_headers option [RT#16637]

5.825   2009-02-16
    - Fixup test failure with perl-5.8.8 and older; qr/$/m doesn't work

5.824   2009-02-13
    - Make format_request() ensure that it returns bytes [RT#42396]
    - Force bytes in all the format_* methods.
    - Ignore Sitemap: lines in robots.txt [RT#42420]
    - Refactor; use variable to hold the test port
    - Add redirects method to HTTP::Message
    - Setting $ua->max_redirect(0) didn't work [RT#40260]
    - Convert files to UTF-8
    - HTTP::Cookies destructor should not clobber $! and other globals.
    - Deal with the Encode module distributed with perl-5.8.0
    - Avoid failure if 127.0.0.1:8333 is in use [RT#42866]
    - Documentation improvements, spelling fixes.

5.823   2008-12-05
    - Bring back the LWP::Debug code [RT#41759]
    - Add documentation section about 'Network traffic monitoring'.
    - Typo fixes
    - Want to ensure we get a single value back here.

5.822   2008-12-05
    - A more modern user_agent example.
    - Make it possible to unset the proxy settings again
    - Prefer use specified Content-Length header [RT#41462]
    - Deprecate LWP::Debug

5.821   2008-11-25
    - Various bug fixes.
    - The Content-Length and Content-MD5 headers are no longer valid after encode/decode
    - Add META information
    - croak on bad proxy args [RT#39919]
    - Skip a failing decoded_content on systems without Encode.pm [RT#40735]
    - Skip LWP test when fork() is unimplemented
    - redo used incorrectly in LWP::Protocol::http [RT#41116]
    - HTTP::Cookies::Microsoft now handles user names with space [RT#40917]
    - Avoid aborting requests saved to file early [RT#40985]

5.820   2008-11-05
    - Main news is the ability to control the heuristics used to determine the
        expiry time for response objects.
    - Reformat later parts of Changes
    - Add a paragraph to summarize the motivation for releases since 5.815
    - all_pod_files_ok();
    - Fix POD markup error
    - Calculation of current_age with missing Client-Date.
    - The age/freshness methods now take an optional 'time' argument
    - More correct matching of 'max-age' in freshness_lifetime method
    - The freshness_lifetime method now support options to control its heuristics

5.819   2008-10-20
    - Release 5.815 to 5.818 had a severe bug that sometimes made LWP not
        collect all data for the responses it received. This release is strongly
        recommended as an upgrade for those releases.
    - Don't override $Net::HTTPS::SSL_SOCKET_CLASS if it's already set.
    - Wrong content handlers would sometimes be skipped [RT#40187]

5.818   2008-10-16
    - Main news in this release is the addition of the dump() method to the
        request and response objects. If found that I often ended up printing
        $resp->as_string for debugging and then regretting after the terminal
        got into a strange mode or just kept on scrolling for the longest time.
    - Use deflate compression instead of gzip for the test
    - Simplify; Get rid of the $USE_STORABLE_DCLONE configuration
    - Add dump method to HTTP::Message.
    - Use $res->dump instead of rolling our own.
    - Layout change; move headers() methods to a more logical place.
    - Add support for x-bzip2 encoding; fix bzip2 decoding.
    - Add send_header method to HTTP::Daemon
    - Make the lwp-request User-Agent string include the LWP version.
    - clone implemented in terms of Storable::dclone [RT#39611]

5.817   2008-10-10
    - This is the release where I played around with Devel::NYTProf to figure
        where time was actually spent during the processing of requests with
        LWP. The methods that manipulated header objects stood out, so this
        release contains a few tweaks to make those parts faster.
    - I also figured a few convenience methods to encode and decode the content
        of request/response objects would be in order.
    - Should store "wire" headers field names with _ without translation.
    - Test HTTP::Request->parse().
    - Restore pre-5.815 behaviour of returning "400 Bad Request" [RT#39694]
    - Rename the HTTP::Status constants to have HTTP_ prefix
    - Detection of unsupported schemes was broken [RT#37637]
    - Allow tainted methods to be forwarded to HTTP::Headers [RT#38736]
    - Add strict mode to HTML::Form
    - Fix test now that less warnings are generated.
    - Add content_is_xml method
    - Make split_header_words() lower case returned tokens/keys
    - Avoid invoking AUTOLOAD on object destruction [RT#39852]
    - Add decode() method to HTTP::Message
    - Add encode() method to HTTP::Message
    - Allow multiple fields to be set with push_header().
    - Make content_type and content_is_xhtml methods faster
    - Faster push_header()

5.816   2008-09-29
    - Oops, release 5.815 broke download-to-file on Windows.
    - Add missing binmode() [RT#39668]
    - Doc tweaks

5.815   2008-09-24
    - The main change this time is the introduction of handlers to drive the
        processing of requests in LWP::UserAgent. You can also register your
        own handlers for modifying and processing requests or responses on their
        way, which I think is a much more flexible approach that trying to
        subclass LWP::UserAgent to customize it. If we have had these early on
        then the LWP::UserAgent API could have been so much simpler as the
        effect of most current attributes can easily be set up with trivial
        handlers.
    - Also thanks to contributions by Bron Gondwana LWP's Basic/Digest auth
        modules now registers handlers which allow them to automatically fill
        in the Authorization headers without first taking the round-trip of a
        401 response when LWP knows the credentials for a given realm.
    - We don't need to build the docs to run the tests.
    - Style tweaks.
    - The jigsaw service isn't up to much good these days.
    - HTTP::Cookies produces warnings for undefined cookie param names [RT#38480]
    - Typo fix; HTTP::Message will never include x-bzip2 in Accept-Encoding [RT#38617]
    - Added HTTP::Config module
    - Add methods to configure processing handlers.
    - 100 Continue response not complete.
    - Use 3-arg open when response content to files.
    - Make the show_progress attribute official (by documenting it).
    - Start using handlers for driving the inner logic of LWP::UserAgent.
    - Expose the content_is_html and content_is_xhtml methods from HTTP::Headers.
    - Make credentials method able to get/set values.
    - An auth handler per realm.
    - Match proxy setting for request.
    - Set up separate handler for adding proxy authentication.
    - Add request_preprepare to be able to initialize proxy early enough.
    - Smarter get_my_handler() that can also create handlers.
    - Refactor; introduce run_handlers method
    - Pass in handler hash to the handler callback.
    - Don't let version=1 override behaviour if specified with a plan Set-Cookie header.
    - Remove handler when we don't have a username/password for the realm.
    - Make tests use Test.pm
    - Double-check that username or password has changed after a failed login.
    - Update Digest Authen to subclass Basic.
    - Avoid running out of filehandles with DYNAMIC_FILE_UPLOAD.
    - Fixed parsing of header values starting with ':' [RT#39367]
    - Documentation typo fixes [RT#38203]

5.814   2008-07-25
    - Typo fix.
    - Add HTTP::Message::decodable()
    - Use decoded_content in the synopsis
    - Avoid adding an empty first part in $mess->add_part()
    - Get rid of all the manual dependency tests.
    - Simplify the Makefile.PL (no interactivity)
    - Provide DELETE method in HTTP::Request::Common [RT#37481]
    - Checkbox picks up nearby text in description of alternates [RT#36771]
    - HTML::Form::possible_values() should not returned disabled values [RT#35248]
    - File::Listing documentation claimed only 'unix' format was supported [RT#22021]
    - File::Listing only support English locales [RT#28879]
    - Make common-req.t use Test.pm
    - Typo; CAN_TALK_TO_OUTSELF
    - Fix up File::Listings fallback to dosftp [RT#23540]
    - File::Listing parse failure on BSD Linux based systems [RT#26724]

5.813   2008-06-17
    - RobotUA constructor ignores delay, use_sleep [RT#35456]
    - Spelling fixes [RT#35457]
    - Add HTTP::Response->filename [RT#35458]
    - Better diagnostics when the HTML::TokeParser constructor fails [RT#35607]
    - Multiple forms with same-named <select> parse wrongly [RT#35607]
    - Provide a progress method that does something that might be useful.
    - Documentation typo fix [RT#36132]

5.812   2008-04-16
    - Typo fix.
    - Simplified Net::HTTP::Methods constructor call.
    - Croak if Net::HTTP constructor called with no argument.
    - Avoid calling $self->peerport to figure out what the port is.
    - 5.811 breaks SSL requests [RT#35090]
    - Make test suite compatible with perl-5.6.1.
    - Wrong treatment of qop value in Digest Authentication [RT#35055]

5.811   2008-04-14
    - Avoid "used only once" warning for $Config::Config.
    - Make HTTP::Request::Common::PUT set Content-Length header [RT#34772]
    - Added the add_content_utf8 method to HTTP::Message.
    - Typo fix.
    - Retry syscalls when they fail with EINTR or EAGAIN [RT#34093,32356]
    - Allow HTTP::Content content that can be downgraded to bytes.
    - HTML::Form does not recognise multiple select items with same name [RT#18993]
    - Document how HTTP::Status codes correspond to the classification functions [RT#20819]
    - Allow 100, 204, 304 responses to have content [RT#17907]
    - HTTP::Request::Common::POST suppressed filename="0" in Content-Disposition [RT#18887]

5.810   2008-04-08
    - Small documentation issues [RT#31346]
    - Explain $netloc argument to $ua->credentials [RT#31969]
    - Make lwp-request honour option -b while dumping links [RT#31347]
    - Ignore params for date convenience methods [RT#30579]
    - Get rid of all the old CVS $Keyword:...$ templates. Set $VERSION to 5.810.
    - Update Copyright year.
    - Drop some sample URLs that were failing.
    - Complement the HTTP::Status codes [RT#29619]
    - Don't allow HTTP::Message content to be set to Unicode strings.
    - Refactor test for Encode.pm
    - Spelling fixes [RT#33272]
    - Trigger HTML::HeadParser for XHTML [RT#33271]
    - Escape status line in error_as_HTML, convert to lowercase [RT#33270]
    - Typo fix [RT#33843]
    - Protocol/file.pm: postpone load of URI::Escape and HTML::Entities [RT#33842]
    - HTML::Form Module and <button> element clicks
    - HTTP::Cookies handle malformed empty Set-Cookie badly [RT#29401]
    - [HTTP::Request::Common] Does not handle filenames containing " [RT#30538]
    - Allow malformed chars in $mess->decoded_content [RT#17368]
    - Croak if LWP::UserAgent is constructed with hash ref as argument [RT#28597]
    - Disabled, checked radiobutton being submitted [RT#33512]
    - warn if TextInput's maxlength exceeded [RT#32239]

5.808   2007-08-05
    - Get rid of t/live/validator test. Too much JavaScript madness for it to
        be a sane LWP test.

5.807   2007-07-31
    - Apply patch correction from CPAN RT #26152
    - More laxed t/live/validator test.

5.806   2007-07-19
    - Added progress callback to LWP::UserAgent.
    - HTTP::Daemon didn't avoid content in responses to HEAD requests
    - Add support for HTTP Expect header to HTTP::Daemon (CPAN RT #27933)
    - Fix t/base/message.t so tests are skipped if Encode is not installed.
        (RT #25286)
    - Add HTML::Tagset as a prerequisite to Makefile.PL
    - Do not clobber $_ in LWP::Protocol::nntp (CPAN RT #25132)
    - Fix lwp-download so it can download files with an "_" in the filename
        (CPAN RT#26207)
    - Quiet complaints from HTML::HeadParser when dealing with undecoded UTF-8
        data. (CPAN RT#20274)
    - When both IO::Socket::SSL and Net::SSL are loaded, use the latter
        (CPAN RT #26152)
    - Allows SSL to work much more reliably: (CPAN RT #23372)
    - Allow text/vnd.wap.wml and application/vnd.oasis.opendocument.text in
        content-type field in lwp-request (CPAN RT #26151)
    - Add default media type for XML in LWP::MediaTypes (CPAN RT #21093)
    - Added chunked test by Andreas J. Koenig

5.805   2005-12-08
    - HTTP::Date: The str2time function returned wrong values for years in the
        early 20th century, because timelocal() actually expects the year to be
        provided on a different scale than what localtime() returns.
    - HTTP::Headers can now be constructed with field names that repeat. The
        $h->header function now also accept repeating field names and can also
        remove headers if passed undef as value.
    - HTML::Form: The parse method now takes hash style optional arguments and
        the old verbose behaviour is now off by default.
    - HTML::Form: Accept <select multiple=""> for compatibility with other
        browsers. Patch by Josh Rai <josh@rai.name>.
    - HTML::Form: Sane handling of 'disabled' for ListInput. Based on patch by
        Joao Lopes <developer@st3tailor.com.br>.
    - HTTP::Negotiate: Fixed matching of partial language tags. Dan Kubb.
    - HTTP::Response: The as_string method now returns a status line that
        doesn't add the "official" code name in the message field. This improves
        the ability to round-trip response objects via
        HTTP::Response->parse($res->as_string) and makes the first line of the
        string returned agree with $res->status_line.
    - Net::HTTP: The host attribute can now be set undef in order to suppress
        this header for HTTP/1.0 requests.
    - Net::HTTP: The default Host: header does not include the port number if
        it is the default (80 for plain HTTP). Some servers get confused by this.
    - Net::HTTP: Ignore bogus Content-Length headers. Don't get confused by
        leading or trailing whitespace.
    - LWP::Protocol::http: More efficient sending of small PUT/POST requests by
        trying harder to pass off the whole request in a single call to syswrite.
    - lwp-request now give better error messages if you used the -o option
        without having the HTML-Tree distribution installed. Also document this
        dependency.

5.804   2005-12-06
    - HTTP::Message->parse did not work when the first line of the body was
        something that looked like a header.
    - HTTP::Header::Auth needs HTTP::Headers to be loaded before it replace
        its functions.
    - LWP::Protocol::nntp improvements by Ville Skyttä <ville.skytta@iki.fi>:
        - Support the nntp: scheme.
        - Support hostname in news: and nntp: URIs.
        - Close connection and preserve headers also in non-OK responses.
        - HEAD support for URIs identifying a newsgroup.
        - Comment spelling fixes.
    - Fix quotes in Net::HTTP example.
        http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=283916
    - Detect EOF when expecting a chunk header. Should address the warnings
        shown in http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=286775
    - WWW::RobotRules: Improved parsing of not strictly valid robots.txt files
        contributed by <Matthew.van.Eerde@hbinc.com>.
    - Makefile.PL: Set name to LWP so that the .packlist ends up in the
        expected place.

5.803   2004-12-11
    - HTTP::Message: $mess->decoded_content sometimes had the side effect of
        destroying $mess->content.
    - HTTP::Message: $mess->decoded_content failed for
        "Content-Encoding: deflate" if the content was not in the zlib-format
        as specified for the HTTP protocol. Microsoft got this wrong, so we
        have to support raw deflate bytes as well.
    - HTTP::Response->parse don't require the protocol to be specified any more.
        This allows HTTP::Response->parse($resp->as_string) to round-trip. Patch
        by Harald Joerg <haj@oook.m.uunet.de>.
    - HTTP::Response: $resp->base might now return undef. Previously it would
        croak if there was no associated request Harald Joerg
    - HTML::Form now support <label> for check- and radio boxes. Dan Kubb
    - Make HTTP::Daemon subclassable, patch by Kees Cook <kees@osdl.org>.
    - lwp-download allow save directory to be specified. Radoslaw Zielinski
    - lwp-download will validate filename derived from server controlled data
        and will fail if something looks not quite right.

5.802   2004-11-30
    - The HTTP::Message object now has a decoded_content() method. This will
        return content after Content-Encodings and charsets have been decoded.
    - Compress::Zlib is now a prerequisite module.
    - HTTP::Request::Common: The POST() function created an invalid
        Content-Type header for file uploads with no parameters.
    - Net::HTTP: Allow Transfer-Encoding with trailing whitespace.
        <http://rt.cpan.org/Ticket/Display.html?id=3929>
    - Net::HTTP: Don't allow empty content to be treated as a valid HTTP/0.9
        response. <http://rt.cpan.org/Ticket/Display.html?id=4581>
        <http://rt.cpan.org/Ticket/Display.html?id=6883>
    - File::Protocol::file: Fixup directory links in HTML generated for
        directories. Patch by Moshe Kaminsky <kaminsky@math.huji.ac.il>.
    - Makefile.PL will try to discover misconfigured systems that can't talk to
        themselves and disable tests that depend on this.
    - Makefile.PL will now default to 'n' when asking about whether to install
        the "GET", "HEAD", "POST" programs. There has been too many name
        clashes with these common names.

5.801   2004-11-12
    - HTTP::Message improved content/content_ref interaction. Fixes
        DYNAMIC_FILE_UPLOAD and other uses of code content in requests.
    - HTML::Form:
        - Handle clicking on nameless image.
        - Don't let $form->click invoke a disabled submit button.
    - HTTP::Cookies could not handle an "old-style" cookie named "Expires".
    - HTTP::Headers work-around for thread safety issue in perl <= 5.8.4.
    - HTTP::Request::Common improved documentation.
    - LWP::Protocol: Check that we can write to the file specified in
        $ua->request(..., $file) or $ua->mirror.
    - LWP::UserAgent clone() dies if proxy was not set. Andy Lester
    - HTTP::Methods now avoid "use of uninitialized"-warning when server
        replies with incomplete status line.
    - lwp-download will now actually tell you why it aborts if it runs out of
        disk space of fails to write some other way.
    - WWW::RobotRules: only display warning when running under 'perl -w' and
        show which robots.txt file they correspond to. Bill Moseley.
    - WWW::RobotRules: Don't empty cache when agent() is called if the agent
        name does not change. Ville Skyttä <ville.skytta@iki.fi>.

5.800   2004-06-16
    - HTML::Form will allow individual menu entries to be disabled. This was
        needed to support <input type=radio disabled value=foo> and
        <select><option disabled>foo.
    - HTML::Form now avoids name clashes between the <select> and <option>
        attributes.
    - HTML::Form now implicitly close <select> elements when it sees another
        input or </form>. This is closer to the MSIE behaviour.
    - HTML::Form will now "support" keygen-inputs. It will not calculate a key
        by itself. The user will have to set its value for it to be returned by
        the form.
    - HTTP::Headers now special case field names that start with a ':'. This is
        used as an escape mechanism when you need the header names to not go
        through canonicalization. It means that you can force LWP to use a
        specific casing and even underscores in header names. The ugly
        $TRANSLATE_UNDERSCORE global has been undocumented as a result of this.
    - HTTP::Message will now allow an external 'content_ref' to be set. This
        can for instance be used to let HTTP::Request objects pick up content
        data from some scalar variable without having to copy it.
    - HTTP::Request::Common. The individual parts will no longer have a
        Content-Length header for file uploads. This improves compatibility
        with "normal" browsers.
    - LWP::Simple doc patch for getprint. Yitzchak
        Scott-Thoennes <sthoenna@efn.org>.
    - LWP::UserAgent: New methods default_header() and default_headers(). These
        can be used to set up headers that are automatically added to requests
        as they are sent. This can for instance be used to initialize various
        Accept headers.
    - Various typo fixes by Ville Skyttä <ville.skytta@iki.fi>.
    - Fixed test failure under perl-5.005.
    - LWP::Protocol::loopback:  This is a new protocol handler that works like
        the HTTP TRACE method, it will return the request provided to it. This
        is sometimes useful for testing. It can for instance be invoked by
        setting the 'http_proxy' environment variable to 'loopback:'.

5.79    2004-04-13
    - HTML::Form now exposes the 'readonly' and 'disabled' attribute for inputs.
        This allows your program to simulate JavaScript code that modifies
        these attributes.
    - RFC 2616 says that http: referer should not be sent with https: requests.
        The lwp-rget program, the $req->referer method and the redirect handling
        code now try to enforce this. By Ville Skyttä <ville.skytta@iki.fi>.
    - WWW::RobotRules now look for the string found in robots.txt as a case
        insensitive substring from its own User-Agent string, not the other way
        around. Patch by Ville Skyttä <ville.skytta@iki.fi>.
    - HTTP::Headers: New method 'header_field_names' that return a list of
        names as suggested by its name.
    - HTTP::Headers: $h->remove_content_headers will now also remove the
        headers "Allow", "Expires" and "Last-Modified". These are also part of
        the set that RFC 2616 denote as Entity Header Fields.
    - HTTP::Headers: $h->content_type is now more careful in removing embedded
        space in the returned value. It also now returns all the parameters as
        the second return value as documented.
    - HTTP::Headers: $h->header() now croaks. It used to silently do nothing.
    - HTTP::Headers: Documentation tweaks. Documented a few bugs discovered
        during testing.
    - Typo fixes to the documentation by Ville Skyttä <ville.skytta@iki.fi>.
    - Updated tests.

5.78    2004-04-07
    - Removed stray Data::Dump reference from test suite.
    - Added the parse(), clear(), parts() and add_part() methods to
        HTTP::Message. The HTTP::MessageParts module of 5.77 is no more.
    - Added clear() and remove_content_headers() methods to HTTP::Headers.
    - The as_string() method of HTTP::Message now appends a newline if called
        without arguments and the non-empty content does not end with a newline.
        This ensures better compatibility with 5.76 and older versions
        of libwww-perl.
    - Use case insensitive lookup of hostname in $ua->credentials. Patch by
        Andrew Pimlott <andrew@pimlott.net>.

5.77    2004-04-06
    - LWP::Simple did not handle redirects properly when the "Location" header
        used uncommon letter casing. Patch by Ward Vandewege <ward@pong.be>.
    - LWP::UserAgent passed the wrong request to redirect_ok(). Patch by Ville
        Skyttä <ville.skytta@iki.fi>.
        https://rt.cpan.org/Ticket/Display.html?id=5828
    - LWP did not handle URLs like http://www.example.com?foo=bar properly.
    - LWP::RobotUA construct now accept key/value arguments in the same way as
        LWP::UserAgent. Based on patch by Andy Lester <andy@petdance.com>.
    - LWP::RobotUA did not parse robots.txt files that contained "Disallow:"
        using uncommon letter casing. Patch by Liam Quinn <liam@htmlhelp.com>.
    - WWW::RobotRules now allow leading space when parsing robots.txt file as
        suggested by Craig Macdonald <craig@freeasphost.co.uk>. We now also
        allow space before the colon.
    - WWW::RobotRules did not handle User-Agent names that use complex version
        numbers. Patch by Liam Quinn <liam@htmlhelp.com>.
    - Case insensitive handling of hosts and domain names in HTTP::Cookies.
        https://rt.cpan.org/Ticket/Display.html?id=4530
    - The bundled media.types file now match video/quicktime with the .mov
        extension, as suggested by Michel Koppelaar <Michel.Koppelaar@kb.nl>.
    - Experimental support for composite messages, currently implemented by the
        HTTP::MessageParts module. Joshua Hoblitt <jhoblitt@ifa.hawaii.edu>.
    - Fixed libscan in Makefile.PL. Patch by Andy Lester <andy@petdance.com>.
    - The HTTP::Message constructor now accept a plain array reference as
        its $headers argument.
    - The return value of the HTTP::Message as_string() method now better
        conforms to the HTTP wire layout. No additional "\n" are appended to
        the as_string value for HTTP::Request and HTTP::Response. The
        HTTP::Request as_string now replace missing method or URI with "-"
        instead of "[NO METHOD]" and "[NO URI]". We don't want values with
        spaces in them, because it makes it harder to parse.

5.76    2003-11-21
    - Revised handling of redirects.
        - clear our content and content headers if we rewrite request as GET
            based on patch by Steven Butler <stevenb@kjross.com.au>.
        - pass $response to redirect_ok()
    - Support cpan:-URLs. Try 'lwp-download cpan:src/latest.tar.gz' :)
    - Fix test failure in 't/html/form.t' for perl5.005.

5.75    2003-10-26
    - Reworked LWP::UserAgent, HTTP::Request and HTTP::Response documentation.
    - other documentation tweaks.

5.74    2003-10-23
    - Improved lwp-download program:
        - set mtime if Last-Modified header reported by server
        - better prompts
        - avoid warnings when aborted at the wrong time
    - Collected all contributions in the AUTHORS file and also added an AUTHORS section to the LWP manpage.
    - Style tweaks to all modules. Move POD after __END__ and uncuddled elses.

5.73    2003-10-19
    - Takanori Ugai <ugai@jp.fujitsu.com> found that 'max_redirect' introduced
        in 5.72 was broken and provided a patch for that.
    - Not all ftp servers return 550 responses when trying to to RETR a
        directory. Microsoft's IIS is one of those. Patch provided by Thomas
        Lotterer <thl@dev.de.cw.com>.
    - Some documentation tweaks.

5.72    2003-10-15
    - Requests for some non-HTTP URLs would fail if the cookie_jar was enabled.
        The HTTP::Cookies::add_cookie_header now ignore non-HTTP requests.
    - The new local/http test failed on Windows because of a missing binmode().
    - Suppress Client-SSL-Warning warning header when Crypt::SSLeay is able to
        verify the peer certificate. Joshua Chamas <joshua@chamas.com>.
    - HTTP::Request::Common::POST did not add a 'Content-Length' header when
        the content ended up empty. by Brian J. Murrell.
    - Internally generated responses now contain a text/plain part that repeats
        the status line. They also have a "Client-Warning" header that can be
        used to differentiate these responses from real server responses.
    - LWP::UserAgent now deals with 303 and 307 redirects. The behaviour of 302
        redirects has also changed to be like 303; i.e. change the method to be
        "GET". This is what most browsers do. Tom Hughes <thh@cyberscience.com>
    - LWP::UserAgent now implements a 'max_redirect' attribute with a default
        value of 7. This should also fix the problem where redirects to the
        same URL to get a cookie didn't work. Sean M. Burke <sburke@cpan.org>.
    - NTLM authentication should continue to fail if the Authen::NTLM module
        can't be loaded. LWP used to think the scheme was available as soon as
        the module stash showed up. Not it looks for the authenticate method to
        be defined. Patch by Jan Dubois.
    - lwp-download will not try to rename *.tbz and *.tar.bz2 to match the
        reported content type. Robin Barker <Robin.Barker@npl.co.uk>.
    - HTTP::Cookies::Netscape documentation fix by Sean M. Burke.
    - HTTP::Cookies::Microsoft documentation fix by Johnny Lee.
    - The code that tries to avoid installing 'HEAD' on top of 'head' on
        systems like Mac OS was further improved to look in
        $Config{installscript} instead of $Config{sitebin}. Patch provided by
        Ken Williams <ken@mathforum.org>.

5.71    2003-10-14
    - Support open-ended Range: header for ftp requests. Patch by Matthew
        Eldridge <eldridge@Graphics.Stanford.EDU>.
    - lwp-request now prints unsuccessful responses in the same way as
        successful ones. The status will still indicate failures.
        Steve Hay <steve.hay@uk.radan.com>.
    - HTML::Form's dump now also print alternative value names.
    - HTML::Form will now pick up the phrase after a <input type=radio> or
        <input type=checkbox> and use that as the name of the checked value.
    - HTML::Form's find_input now returns all inputs that match in array
        context. Based on patch by Mark Stosberg <markstos@cpan.org> in
        <http://rt.cpan.org/Ticket/Display.html?id=3320>.
    - HTTP::Daemon's send_file() method did not work when given a file name.
        Patch by Dave W. Smith <dws@postcognitive.com>.
    - HTTP::Daemon is less strict about field names in the request headers is
        received. The Norton Internet Security firewall apparently likes to
        send requests with a header called '~~~~~~~~~~~~~~~'. Further details
        in <http://rt.cpan.org/Ticket/Display.html?id=2531>.
    - LWP::Protocol::http assumed $1 would be meaningful without testing the
        outcome of the match. This sometimes produced an extra garbage
        Authentication header. Based on the patch by <bai@dreamarts.co.jp>
        in <http://rt.cpan.org/Ticket/Display.html?id=1994>.
    - LWP::Protocol::mailto will try harder to locate the sendmail program as
        suggested in <http://rt.cpan.org/Ticket/Display.html?id=2363>. Also
        let $ENV{SENDMAIL} override the search.
    - Patch to enable OS/2 build by Ilya Zakharevich.

5.70    2003-10-13
    - File::Listing::apache by Slaven Rezic <slaven@rezic.de>
    - HEAD requests now work properly for ftp: URLs.
        Patch by Ville Skyttä <ville.skytta@iki.fi>.
    - LWP::UserAgent: protocols_allowed() and protocols_forbidden() are now
        case-insensitive. Patch by Ville Skyttä <ville.skytta@iki.fi>.
    - Avoid warning from HTTP::Date on certain invalid dates. Patch by
        David Dick <david_dick@iprimus.com.au>.
    - HTML::Form::param() is an alternative interface for inspecting/modifying
        the form values. It resembles the interface of CGI.
    - HTML::Form docs updated by Martin Thurn <mthurn@northropgrumman.com>.
    - HTML::Form will treat any unknown input types as text input. This appears
        to be what most browsers do.
    - HTML::Form::parse() can now take a HTTP::Response object as argument.
    - The "checkbox" and "option" inputs of HTML::Form can now be turned on with
        the new check() method.
    - The inputs of HTML::Form can now track alternative value names and allow
        values to be set by these names as well. Currently this is only
        supported for "option" inputs.
    - HTML::Form's dump() method now print the name of the form if present.

5.69    2003-01-24
    - Include lwptut.pod contributed by Sean M. Burke C<sburke@cpan.org>.
    - The lwp-request aliases GET, HEAD, POST where installed when no program
        should be. Fixed by David Miller <dave@justdave.net>.
    - lwp-rget --help don't print double usage any more.
    - HTTP::Header::Util is now more reluctant to put quotes around token vals.
    - Net::HTTP: Avoid warning on unexpected EOF when reading chunk header.

5.68    2003-01-02
    - Fix test failure for t/html/form.t when running under perl-5.8.0.

5.67    2003-01-01
    - HTTP::Cookies::Microsoft contributed by Johnny Lee <typo_pl@hotmail.com>.
        This module makes it possible for LWP to share MSIE's cookies.
    - HTML::Form supports file upload better now. There are some new methods on
        that kind of input; file(), filename(), content() and headers().
    - Removed unfinished test that depended on Data::Dump.
    - Net::HTTP avoids exceptions in read_response_headers() with laxed option.
        It now always assumes HTTP/0.9 on unexpected responses.
    - HTML::Form documentation reworked.

5.66    2002-12-20
    - Various patches from Sean M. Burke. Most of them to match up LWP with
        the "Perl & LWP" book.
    - LWP::DebugFile module contributed by Sean.
    - LWP::Authen::Ntml contributed by James Tillman.
    - HTTP::Daemon patch for Alpha by <shildreth@emsphone.com>
    - The format_chunk() and write_chunk() methods of Net::HTTP did not work.
        Bug spotted by Yale Huang <yale@sdf-eu.org>.
    - The Client-Peer response header is back.

5.65    2002-05-31
    - Make HTTP::Date compatible with perl 5.8.
    - Try to avoid to default to overwriting /usr/bin/head on MacOS X when the
        perl install prefix is /usr/bin.
    - HTTP::Cookies fix for parsing of Netscape cookies file on MS Windows.
        Patch by Sean M. Burke <sburke@cpan.org>.
    - HTTP::Negotiate doc patch from Edward Avis <epa98@doc.ic.ac.uk>.

5.64    2002-02-09
    - Simplified the Makefile.PL:
        - the scripts are not longer *.PL files
        - don't try to make symlinks for GET, HEAD, POST as that has not
            worked for a long time
        - the GET, HEAD, POST aliases for lwp-request should now work on Win
    - HTTP::Cookies:
        - added 'clear_temporary_cookies'; Mike Schilli <schilli1@pacbell.net>.
        - trailing space in old cookie parameters not ignored; Ivan Panchenko
        - protect against $SIG{__DIE__}; Adam Newby <adam@NewsNow.co.uk>
    - LWP::Authen::Digest:
        - abort digest auth session if fails repeatedly with the same user/pass
    - MacOS portability patches to test suite by Chris Nandor <pudge@pobox.com>.

5.63    2001-12-14
    - HTTP::Negotiate: Deal with parameter names in a case insensitive way. Put
        a little weight on the order of features in the Accept headers.
    - LWP::UserAgent: make sure that the 'request' attribute is always set on
        the returned response.
    - LWP::Protocol::http will now allow certain bad headers in the responses
        it reads. The bad headers end up in the header 'Client-Junk'.
    - Net::HTTP new options to the 'read_response_headers' method. The option
        'laxed' will make it ignore bad header lines. The option 'junk_out' can
        be used to pass in an array reference. Junk header lines are pushed
        onto it.
    - Net::HTTP::Methods: fixed the internal zlib_ok() to also return the
        correct value the first time.
    - LWP::Protocol::http: Ensure that we don't read until select has said it's
        ok since we have put the socket in non-blocking mode. Previously this
        could happen if you set the 'timeout' attribute of the user agent to 0.
    - LWP::Authen::Digest now use Digest::MD5 instead of MD5.
    - Some adjustments to Makefile.PL to figure out if Compress::Zlib is
        available and adjust the test suite accordingly.

5.62    2001-11-21
    - The $VERSION of LWP::UserAgent wrapped around. This confused the CPAN
        indexer. Bumped the major number to 2 to fix this.
    - Net::HTTP did not work well on perl5.003. The PeerHost argument to
        IO::Socket::INET was not recognized, so we had to use PeerAddr instead.
        The syswrite() method also required a length argument.
    - Net::HTTP did not deal with transfer encoding tokens in a case-insensitive
        way. Patch by Blair Zajac <blair@orcaware.com>.
    - The jigsaw-chunk test failed on MacOS because "\n" is different. Patch
        by Chris Nandor <pudge@pobox.com>.

5.61    2001-11-16
    - LWP::Protocol::http did not invoke its _fixup_header method. The result
        was that the 'Host' header was wrong when going through a proxy server.
    - The live Google test is gone. They blocked us.
    - The guts of Net::HTTP has moved to Net::HTTP::Methods.
    - Net::HTTP now has limits on the size of the header; set by default.
    - New module Net::HTTPS.
    - Documentation tweaks.
    - HTTP::Headers: The 'remove_header' method now return the values of the
        fields removed as suggested by Blair Zajac <blair@orcaware.com>. Also a
        typo fix by Blair.
    - HTTP::Message: The delegation via &AUTOLOAD should be slightly faster
        now. It will install a real forwarding function the first time it is
        called for each HTTP::Headers method.
    - LWP::UserAgent: Don't forward 'Cookie' headers on redirect. Patch by
        Steve A Fink <steve@fink.com>.
    - LWP::Protocol::http has been reorganized to make it simpler to subclass
        it. Other minor changes to it include:
        - Client-Warning is gone
        - Client-Request-Num renamed to Client-Response-Num
        - A 'Transfer-Encoding' header is rewritten into a
            'Client-Transfer-Encoding' header.
    - LWP::Protocol::https is completely redone.

5.60    2001-10-26
    - Made HTTP/1.1 the default. The old HTTP/1.0 module has been renamed as
        LWP::Protocol::http10. There is an environment variable;
        PERL_LWP_USE_HTTP_10 that can be set to have LWP use the old drivers.
    - Deal with "100 continue" responses even when not requested by and Expect
        header in the request. MS IIS is eager to send this kind of response.
    - For HTTP/1.1 over SSL there was a problem with the underlying SSL
        libraries if the socket was configured to non-blocking mode. Disable
        this for https. By Michael Thompson <mickey@berkeley.innomedia.com>
    - Support the Range header for ftp:// reqs. David Coppit <david@coppit.org>.
    - Rearrange Bundle::LWP on request from Chris Nandor.
    - HTTP::Cookies: Allow a domain like .foo.com match host "foo.com".
        By Alexandre Duret-Lutz <duret_g@lrde.epita.fr>
    - For redirects make sure Host header is not copied to the new request.
    - The HTML::HeadParser is not loaded until actually needed.
    - Net::HTTP should now work with perl5.005 by a simple tweak to
        require IO::Socket::INET
    - WWW::RobotRules::AnyDBM: Clear database on open. Some DBM implementations
        don't support the O_TRUNC flag properly. Radu Greab <radu@netsoft.ro>.

5.53_97 2001-09-19 (TRIAL)
    - LWP::Protocol::http11: fix socket leak. Because we managed to set up a
        circular reference within the sockets objects they stayed around forever.
    - LWP::UserAgent: Split up simple_request into prepare_request and
        send_request. Patch contributed by Keiichiro Nagano <knagano@sodan.org>
    - LWP::Protocol::http: Pass all header data to LWP::Debug::conns. Martijn.
    - LWP::UserAgent: Sean fixed a Cut&Paste error.
    - HTTP::Cookies: avoid pack("c",...) warning from bleadperl.

5.53_96 2001-08-27 (TRIAL)
    - HTTP/1.1 support also for https. by Doug MacEachern <dougm@covalent.net>
    - The HTTP/1.1 modules are now enabled by default. Hope that will give them
        more testing than they otherwise would have gotten.
    - HTTP::Daemon's accept now has same behaviour as IO::Socket's accept in
        list context. Fixed by Blair Zajac <blair@gps.caltech.edu>.
    - More argument sanity checking in HTTP::Request->uri and
        LWP::UserAgent->simple_request. Patch by Sean M. Burke.
    - HTTP::Protocol::http. short writes. Norton Allen <allen@huarp.harvard.edu>
    - HTTP::Protocol::http11:  Deal with newlines in header values.
    - Net::HTTP: call sysread (instead of xread) when more data is required.

5.53_95 2001-08-06 (TRIAL)
    - Fix HTTP::Cookies where there is a mix of Set-Cookie and Set-Cookie2
        headers. In that case we used to ignore all Set-Cookie headers. Now we
        only ignore those Set-Cookie headers that reference the same cookie as
        a Set-Cookie2 header.
    - HTTP::Request, HTTP::Response will by default now use "URI" class, instead
        of "URI::URL", when constructing its URI objects. This has a potential
        for breaking existing code as URI::URL objects had some extra methods
        that external code might depend upon.
    - Patches by Sean M. Burke:
        - Fix treatment of language tags in HTTP::Negotiate
        - Avoid trailing newline in $response->message
        - HTTP::Response clarifications
    - LWP::Simple deals with non-absolute redirects "correctly" now.
    - Net::HTTP does not try to load Compress::Zlib until it is needed.
    - Net::HTTP documentation has been updated.

5.53_94 2001-05-05 (TRIAL)
    - Sean M. Burke's update to LWP::UserAgent:
        - updated redirect_ok behaviour
        - new convenience methods: get/head/post/put
        - protocols_allowed/protocols_forbidden
        - LWP::Protocol::nogo (new module)
    - Added digest auth test against Jigsaw
    - Fixed a 'use of uninitialized'-warning in the handling of digest auth.
    - Net::HTTP updates:
        - new option: SendTE
        - support transfer-encoding 'deflate' and 'gzip' (when Compress::Zlib
            is available).
        - new methods: format_chunk, format_chunk_eof
        - use -1 (instead of "0E0" as signal that no data was available,
            but this was not EOF).

5.53_93 2001-04-28 (TRIAL)
    - Makefile.PL now asks some questions
    - Added live tests for the new HTTP/1.1 support
    - LWP::MemberMixin: make it possible to set a value to the 'undef' value.
    - Net::HTTP:
        - transparent support for 'deflate' and 'gzip' transfer encodings
            (need to have the Compress::Zlib module installed for this to work).

5.53_92 2001-04-25 (TRIAL)
    - LWP::Protocol::ftp now support keep-alives too. The command connection
        will stay open if keep-alives are enabled.
    - LWP::Protocol::http11 various fixes:
        - chunked request content did not work
        - monitor connection while sending request content
        - deal with Expect: 100-continue
    - LWP::RobotUA: Protect host_port call. Not all URIs have this method.

5.53_91 2001-04-20 (TRIAL)
    - Introduced LWP::ConnCache module. Works similar to HTTP::Cookies, it that
        it takes effect if associated with the $ua.
    - The handling of $ua->max_size changed to make 0 mean 0 (not unlimited). A
        value of undef means no limit. The X-Content-Base header is gone. I
        hope nobody relies on it. It might come back if people start to scream.
        There is a new Client-Aborted header instead.
    - The Range header generated for $ua->max_size had an off-by-one error. A
        range of "0-1" means 2 bytes.
    - The LWP::UserAgent constructor now takes configuration arguments.
    - Keep-alive and the new HTTP/1.1 module can now be simply enabled with
        something like: LWP::UserAgent->new(keep_alive => 1);
    - New method $ua->conn_cache to set up and access the associated connection
        manager.
    - If the string passed to $ua->agent() ends with space then the
        "libwww-perl/#.##" string is automatically appended.
    - New method $ua->_agent
    - Passing a plain hash to $ua->cookie_jar automatically loads HTTP::Cookies
        and initialise an object using the hash content as constructor arguments.
    - LWP::Protocol::http11 now use the conn_cache of the $ua.
    - LWP::Protocol::http11 now added a few new Client- headers.
    - LWP::Protocol avoid keeping the connection alive if $ua->max_size limit
        prevents the whole body content from being read.
    - Net::HTTP updates:
        - new methods: write_chunk(), write_chunk_eof()
        - reset state properly when a new body is read.
        - always set read buffer empty on eof
        - doc update
    - WWW::RobotRules patch by Liam Quinn <liam@htmlhelp.com>:
        - Always qualify netloc with port.
        - Reverse User-Agent substring matching.

5.53_90 2001-04-18 (TRIAL)
    - Note: This is a developer only release. Not for production use.
    - LWP::Protocol::http11 now does keep-alives by default. Still need to
        figure out what interface to provide at the $ua level.
    - LWP::Protocol::http11 deals with CODE content in request.
    - Net::HTTP updated:
        - added format_request() method
        - added _rbuf and _rbuf_length methods
        - read_response_headers does not return protocol version any more.
        - peer_http_version method did not work because of typo.
        - documentation added
    - New module Net::HTTP::NB. This is a Net::HTTP subclass that is better
        suited for multiplexing as it is able to do no-blocking reads of headers
        and entity body chunks.
    - HTTP::Request: Protect $request->uri against evil $SIG{__DIE__} handlers.
    - Some reorganisation in how stuff is passed from $ua to protocol object.
        The $ua is now passed in so protocol objects might store start in it.
    - The $ua->max_size default is now 0.
    - The $ua->clone method avoids sharing of proxy settings between the old
        and the new.
    - This file is renamed to 'Changes' (used to be 'ChangeLog').

5.53    2001-04-10
    - LWP::Simple::get() could sometimes return nothing on failure in list
        context. Now it always returns 'undef'.
    - HTTP::Cookies does not request 2 dots on domain names any more. New
        option to hide the Cookie2 header. Cookie2 header now quote the version
        number. Updated reference to RFC 2965.
    - Support for embedded userinfo in http proxy URIs. It means that you know
        can set up your proxy with things like:
        http_proxy="http://proxyuser:proxypass@proxyhost:port" Patch by
        John Klar <j.klar@xpedite.com>.
    - Experimental HTTP/1.1 support. New module called Net::HTTP that provide
        the lower level interface and a LWP::Protocol::http11 module that
        builds on it. The HTTP/1.1 protocol module must be loaded and
        registered explicitly, otherwise the old and trustworthy HTTP/1.0
        module will be used.
    - LWP::Protocol::GHTTP will try to use the get_headers() methods so that it
        can actually extract all the headers.

5.52    2001-03-29
    - HTTP::Header: new method $h->init_header() that will only set the header
        if it is not already set. Some shuffling around in the code.
    - LWP::UserAgent will not override 'User-Agent', 'From' or 'Range' headers
        if they are explicitly set in the request passed in.
    - HTML::Form tries to optimize parsing be restricting the tags that are
        reported by HTML::Parser. Will need HTML::Parser v3.19_93 or better for
        this to actually have any effect.
    - LWP::Protocol::ftp now deals with path parameters again. It means that
        you can append ";type=a" to ftp-URI and it will download the document
        in ASCII mode.
    - If the server output multiple Location headers on a redirect, ignore all
        but the first one.
    - Extract cookies failed on request URIs with empty paths. This was only
        triggered if you used URI objects directly in scripts.
    - This change was actually part of 5.51: Fix qop="auth" handling for Digest
        authentication. Patch by Dave Dunkin <dave_dunkin@hotmail.com>.

5.51    2001-03-14
    - SECURITY FIX:
        If LWP::UserAgent::env_proxy is called in a CGI environment, the
        case-insensitivity when looking for "http_proxy" permits "HTTP_PROXY"
        to be found, but this can be trivially set by the web client using the
        "Proxy:" header. The fix applied is that $ENV{HTTP_PROXY} is not longer
        honored for CGI scripts. The CGI_HTTP_PROXY environment variable can be
        used instead. Problem reported by Randal L. Schwartz.
    - NOTE: It is recommended that everybody that use LWP::UserAgent (including
        LWP::Simple) in CGI scripts upgrade to this release.
    - Explicit setting of action on HTML::Form had no effect because of a code
        typo. Patch by BooK <book@netcourrier.com>.
    - HTTP::Daemon: The CONNECT method need special treatment because it does
        not provide a URI as argument (just a "hostname:port"). The non-upward
        compatibility warning is that you must now call $request->url->host_port
        to get the host/port string for CONNECT, rather than calling
        $request->url and using the entire string. Based on patch from
        Randal L. Schwartz <merlyn@stonehenge.com>
    - HTTP::Daemon: Create self URL based on $self->sockaddr. This works better
        when LocalAddr is used to specify the port number. Based on patch from
        Ben Low <ben@snrc.uow.edu.au>.
    - Avoid potential '<FILE> chunk 1' messages at the end of the
        response 'message'.

5.50    2001-01-12
    - Fix for test cases that failed because of URI-1.10 now encode space as '+'
        instead of '%20. Patch by Christian Gilmore <cgilmore@tivoli.com>.
    - Makefile.PL: Require URI-1.10.
    - HTTP::Daemon now accepts any non-space character as method name on the
        request line. It used to fail on methods like "M-POST" because it only
        allowed \w-chars.
    - HTTP::Date now allow fractional seconds in ISO date formats. Based on
        patch from Mark D. Anderson <mda@discerning.com>
    - HTTP::Request::Common will now calculate Content-length even if
        $DYNAMIC_FILE_UPLOAD is set. Lindley, Lee T <Lee.Lindley@viasystems.com>

5.49    2000-12-31
    - HTML::Form: Use croak() instead of die. Implement $f->possible_values.
        Avoid use of undef value warnings.
    - HTTP::Cookies: fix epath issue. Make it work for URI::http as the
        uri-attribute of HTTP::Request object
    - HTTP::Date: Allow ignored timezone info in parenthesis. Patch by
        Sander van Zoest <sander@covalent.net>.
    - Fix calculation of non-GMT timezones (wrong sign). Patch by
        KONISHI Katsuhiro <konishi@din.or.jp>.
    - HTTP::Response: Let $res->base() absolutize the URI. Based on bug report
        from Hans de Graaff <hans@degraaff.org>.
    - Fixed minor doc typos in HTTP::Headers::Util and LWP::UserAgent.
    - HTTP::Request::Common: Support boundary spec from client.
    - LWP::Simple: Avoid trivial_http_get when @ in authority part of URI
    - LWP::Authen::Digest: Need query in URI param. <ronald@innovation.ch>
    - LWP::Protocol::http: unescape user/pass if they are specified in the URI.
    - Added LWP::Protocol::GHTTP. This allow LWP to use the HTTP::GHTTP module
        as the low level HTTP driver.

5.48    2000-04-09
    - README.SSL update by Marko Asplund <aspa@hip.fi>
    - Added cookie example to lwpcook.pod
    - HTTP::Date::str2time returns undef on failure instead of an empty list as
        suggested by Markus B Krüger <markusk@pvv.org>
    - $request->uri($uri) will now always store a copy of the $uri.
    - HTTP::Status: Added status codes from RFC 2616 and RFC 2518 (WebDAV)
    - LWP::RobotUA will not parse robots.txt unless content type and content
        sample looks right.
    - LWP::UserAgent: Deal with multiple WWW-Authenticate headers. Patch by
        Hugo <hv@crypt.compulink.co.uk>
    - $ua->proxy can now return the old proxy settings without destroying the
        old one. Based on patch by Benjamin Low <ben@snrc.uow.edu.au>
    - LWP::Protocol::http update
        - don't terminate header parsing on bad headers
        - extra_sock_opts
        - preparations for keep alive support
        - method CONNECT
    - WWW::RobotRules deal with various absolute URIs in the disallow lines.
    - Makefile.PL: Make sure we have HTML::TokeParser
    - Clean test on VMS by Charles Lane <lane@ DUPHY4.Physics.Drexel.Edu>.

5.47    1999-11-16
    - Added HTML::Form to the distribution.
    - LWP::Protocol::ftp: Make it URI.pm compatible. We broke it in 5.45.
    - LWP::Protocol::http: Kill any Connection header
    - LWP::MediaTypes: Fixed builtin html/text mapping. Added bz2 to suffixEncoding

5.46    1999-10-28
    - Updated mailing list address
    - Avoid warnings for lwp-request -t
    - referrer as alternative spelling for referer as suggested by tchrist.
    - More conservative selection of boundary for multipart messages in
        &HTTP::Request::Common::POST.
    - LWP::MediaTypes can now export &read_media_types.
    - Spelling corrections from Ben Tilly <Ben_Tilly@trepp.com>

5.45    1999-09-20
    - The LWP SSL support better explained. Documentation in README.SSL and
        lwpcook.pod contributed by Marko Asplund <aspa@hip.fi>.
    - LWP::Protocol::https: Try IO::Socket::SSL if Net::SSL is not available.
    - lwp-mirror -t option did not work.
    - defined(@ISA) eliminated. Patch by Nathan Torkington <gnat@frii.com>
    - LWP::Protocol::ftp: Protect against empty path_segments

5.44    1999-06-25
    - We require URI-1.03, since this fix some query quoting stuff that
        HTTP::Request::Common rely upon.
    - 'lwp-request -HUser-Agent:foo' can now be used to set this header too.
    - Localize $/ to ensure standard record separator in HTTP::Cookies
    - LWP::UserAgent will now set the Range header in requests if the
        $ua->max_size attribute is set.

5.43    1999-05-09
    - New lwp-request command line option that allow you to put any header into
        the request (-H).
    - New HTTP::Date because of Y2K-problems with the old one. It refused to
        parse the ftp-listing (ls -l) dates missing year. Additional entry
        point is parse_date(). This function avoid any limitations caused by
        the time-representation (seconds since epoch).
    - Y2K fix to t/base/cookies.t. Netscape's original cookie example expires
        at 09-Nov-99.
    - binmode() in LWP::Protocol::file: Matt Sergeant <matt-news@sergeant.org>

5.42    1999-03-20
    - MacOS patches from Paul J. Schinder <schinder@leprss.gsfc.nasa.gov>
    - Documentation patch from Michael A. Chase <mchase@ix.netcom.com>
    - PREREQ_PM patch from Andreas Koenig <andreas.koenig@anima.de>
    - LWP::Simple::head fix by Richard Chen <richard@lexitech.com>
    - "LWP fails with PerlEXE"-patch from Gurusamy Sarathy
    - Allow "." in HTTP header names: Marc Langheinrich <marc@ccm.cl.nec.co.jp>
    - Fixed reference to $uri->netloc in lwp-request
    - Cute animation in lwp-download

5.41    1998-11-19
    - HTTP::Cookies provide better Netscape cookies compliance. Send back
        cookies to any port, and allow origin host name to be specified as
        domain, and still be treated as a domain. Patch from Andreas
        Gustafsson <gson@araneus.fi>.
    - HTTP::Cookies now ignore the Expires field in Set-Cookie, if the date
        provided can't be parsed by HTTP::Date.
    - HTTP::Daemon will lowercase the hostname returned from
        Sys::Hostname::hostname(). This avoid some test failures in the test
        suite for people with upper- or mixed-cased hostnames.
    - LWP::Protocol::gopher: IO::Socket::INET ctor did not specify
        Proto => 'tcp'. This made it less portable to older IO::Socket versions.
    - No programs installed when you build the Makefile with
        'perl Makefile.PL LIB=/my/lib'
    - LWP bundle mention Digest::MD5 instead of MD5
    - headers-auth.t test suite bug triggered by perl5.005_5x. Patch by
        Albert Dvornik <bert@genscan.com>
    - The local/http.t test actually did try to unlink("."). This was very
        confusing on systems where it succeed.

5.40_01 1998-10-12 (TRIAL)
    - Unbundled URI::URL modules. You now have to install the URI.pm module in
        order to get libwww-perl working.
    - Made library URI.pm compatible. Made all URI object instantiations based
        on $HTTP::URI_CLASS variable.
    - New lwp-rget option: --referer. INOUE Yoshinari <inoue@kusm.kyoto-u.ac.jp>
    - One more binmode() to HTTP::Daemon: by Markus Laker <mlaker@contax.co.uk>

5.36    1998-08-04
    - The lwp-download script will call $ua->env_proxy now.
    - The lwp-request script allows content types (specified with the -c option)
        with optional parameters like: multipart/mixed; boundary="--".
    - LWP::UserAgent will lowercase all authentication parameter names before
        passing it to the authentication module. Previous releases ignored
        parameters like; Realm="Foo" (because Realm contained upper case
        letters).
    - LWP::Protocol::ftp test for If-Modified-Since was wrong.
    - How the $url->abs method works can now be configured with the global
        variables $URI::URL::ABS_ALLOW_RELATIVE_SCHEME and
        $URI::URL::ABS_REMOTE_LEADING_DOTS.
    - The anonymous password guesser for ftp URLs will now call the external
        `whoami` program any more. Patch by Charles C. Fu <ccwf@bacchus.com>.
    - LWP::Protocol::http now allow dynamic requests without any Content-Length
        specified when Content-Type is multipart/*
    - HTTP::Request::Common can now upload infinite files. (Controlled by the
        $DYNAMIC_FILE_UPLOAD configuration variable.)

5.35    1998-07-10
    - More lwp-rget patches from David D. Kilzer <ddkilzer@madison.dseg.ti.com>.
        Adds the following new options: --iis, --keepext, --tolower
    - LWP::MediaTypes patches from MacEachern <dougm@pobox.com>. Adds new
        functions: add_type(), add_encoding(), read_media_types()

5.34    1998-07-07
    - LWP::Protocol::ftp now try to use the MDTM command to support the
        Last-Modified response header as well as If-Modified-Since in requests.
        Original and final patch by Charles C. Fu <ccwf@bacchus.com>
    - $url->path_components will not escape "." any more.
    - WWW::RobotRules will now work for Mac text files too (lines delimited by
        CR only). Patch by Olly Betts <olly@muscat.co.uk>
    - lwp-rget support <area ..> links too.

5.33    1998-05-07
    - LWP::Simple::get() did try to handle too many of the 3xx codes as
        redirect when it bypasses full LWP.
    - LWP::UserAgent->mirror will now use utime(2) to set the file modification
        time corresponding to the Last-Modified header.
    - LWP::Protocol::http will not modify the HTTP::Request that it is
        processing. This avoids sticky Host header for redirects.
    - URI::Heuristic and lwp-download documentation update.

5.32    1998-04-15
    - Much improved HTTP::Daemon class. We now support persistent connections.
        Changes include:
        - $c->get_request can be told to return after reading and parsing
            headers only.
        - $c->reason (new method)
        - $c->read_buffer (new method)
        - $c->proto_ge (new method)
        - $c->force_last_request (new method)
        - $c->send_response now support CODE reference content and will use
            chunked transfer encoding for HTTP/1.1 clients.
        - expanded the documentation.

5.31    1998-04-10
    - Makefile.PL now checks that HTML::HeadParser is present.
    - Updated HTTP::Cookies according to draft-ietf-http-state-man-mec-08.txt
        It now supports the .local domain and value less 'port' attribute in
        the Set-Cookie2 header.
    - HTTP::Headers update:
        - $h->content_type now always return a defined value
        - $h->header($field) will now concatenate multi-valued header fields
            with "," as separator in scalar context.
    - HTTP::Request::Common update:
        - used to destroy the content of the  hash/array arguments passed to
            its constructor functions.
        - allow a hash reference to specify form-data content.
        - you can override Content-Disposition for form-data now.
        - set content-encoding for files if applicable
        - default boundary string is now always "--000"
    - LWP::UserAgent will not follow more than 13 redirects automatically.

5.30    1998-04-01
    - Unbundled the following modules:
        * HTML-Parser  (HTML::Parser, HTML::Entities, HTML::LinkExtor,...)
        * HTML-Tree    (HTML::Element, HTML::TreeBuilder,...)
        * Font-AFM     (Font::AFM, Font::Metrics::*)
        * File-CounterFile
    - Simplified internals of HTTP::Headers. Hopefully, nobody will notice.
    - New modules HTTP::Headers::Auth,  HTTP::Headers::ETag that adds
        additional convenience methods to the HTTP::Headers class.
    - Removed split_etag_list() from HTTP::Headers::Util, in the hope that
        nobody had starting using it.

5.22    1998-03-24
    - HTTP::Cookies made more compatible with Netscape cookies. Allow the domain
        to match host, allow dots in the part of the hostname not covered by
        domain. Don't quote the cookie value even when it contains non-token
        chars. Based on patch from Kartik Subbarao <subbarao@computer.org>.
    - Updated HTTP::Status to reflect <draft-ietf-http-v11-spec-rev-03>.
        RC_MOVED_TEMPORARILY renamed to RC_FOUND. Added codes
        RC_TEMPORARY_REDIRECT (307) and RC_EXPECTATION_FAILED (417). Slightly
        more documentation too.
    - The split_header_words() function HTTP::Headers::Util could go into
        infinite loop on some header values. Implemented split_etag_list() too
        Added more documentation and test script for this module.
    - LWP::Simple now switch to full LWP implementation even for systems that
        force all environment keys to be upper case. Modification suggested by
        Dale Couch <dcouch@training.orl.lmco.com>.
    - LWP::UserAgent allows redirects to a relative URL with scheme to be made.
        Suggested by Chris W. Unger <cunger@cas.org>.
    - Applied dtd2pm.pl patches from <peterm@zeta.org.au>. It can now extract
        information from the HTML40.dtd

5.21    1998-03-12
    - lwp-rget patches from David D. Kilzer <ddkilzer@madison.dseg.ti.com>
        (modified by Gisle). Support the --hier  and the --auth options and
        <frame>s.
    - File::CounterFile protect against bad $/ and $\ by Frank Hoehne.
    - File::Listing used "next" when return was more appropriate. Patch
        by erik@mediator.uni-c.dk.
    - HTML::Element support for multiple boolean attributes for a single element.
        Patch by Philip Guenther.
    - Can set $HTTP::Headers::TRANSLATE_UNDERSCORE to FALSE value to suppress
        tr/_/-/ of header keys.
    - LWP::Protocol::http won't initialize the Host header if it's already set.
    - LWP::Protocol::http did not handle responses with no header lines
        correctly. Patch by Daniel Buenzli <buenzli@rzu.unizh.ch>
    - $url->rel() handles path segments without leading "/" better.

5.20    1998-02-13
    - Fixed the "500 Offset outside string" bug that affected perl <= 5.004_03
    - Fixed a documentation typo. by Michael Quaranta <quaranta@vnet.IBM.COM>
    - HTTP::Date: Protect against croaking from timegm/timelocal.

5.19    1998-01-26
    - HTML::Parser does not call $self->text() callback for empty text anymore.
    - LWP::Protocol::https was noisy when connections failed and the script was
        running with '-w' (noise inherited from IO::Socket::INET)
    - $ua->use_alarm(BOOL) now gives a warning if running with -w

5.18_05 1998-01-20 (TRIAL)
    - HTTPS support based on my Crypt-SSLeay module. The Net-SSLeay module is
        not supported any more.
    - lwp-request documentation typo spotted Martijn Koster.
    - Removed superfluous \\ in the URI::Escape regex. Spotted by Martijn.
    - File::Listing now handles timezones correctly.
    - Added $VERSION to modules that was missing it.
    - Added 'use strict' to several modules that was missing it.
    - LWP::Protocol::http now adds the Client-Peer header to responses and has
        hooks for more callbacks.
    - LWP::Protocol::https adds Client-SSL-Cipher, Client-SSL-Cert-Subject and
        Client-SSL-Cert-Issuer headers to the response. The requests can also
        be made conditional based on the peer certificate using the
        If-SSL-Cert-Subject header in requests.
    - HTML::Parse is back. (It was even used in lwpcook.pod)

5.18_04 1997-12-17 (TRIAL)
    - Makefile.PL fix based on report from Pon Hwa Lin <koala@fragment.com>
    - lwp-request will now print the res code message with -s and -S options.
    - Hide IO::Socket::INET noise when running under -w
    - Don't set 'Content-Length: 0' in HTTP requests.
    - LWP::Protocol::http now calls LWP::Debug::conns again

5.18_03 1997-12-16 (TRIAL)
    - Got rid of alarms() and replaced LWP::Socket with IO::Socket::INET.
    - New protocol implementations for http, https, gopher, nntp.
    - $ua->use_alarm() is now a noop.
    - LWP::Protocol::ftp patch from  Tony Finch <fanf@demon.net>.
    - Removed deprecated modules from the distribution; HTML::Parse,
        LWP::Socket, LWP::SecureSocket, LWP::IO, LWP::TkIO.

5.18    1997-12-12
    - HTTP authorization patches from Tony Finch <fanf@demon.net>. Allows
        "user:pass@" in HTTP URLs.
    - HTML::Parser patch by Brian McCauley <B.A.McCauley@bham.ac.uk>. Pass
        original text to end() method.
    - The HTML::Parser->netscape_buggy_comment method is deprecated. Use
        HTML::Parser->strict_comment instead. The default value has changed
        with the name.
    - Some HTML::Parser optimization tweaks.
    - New module named HTML::Filter
    - Updated HTTP::Headers to the latest HTTP spec. Added knowledge about the
        "Trailer", "Expect", "TE", "Accept-Range" headers. "Public" header
        is gone.
    - Added some more header convenience methods: if_unmodified_since,
        content_language, and proxy_authorization methods.
    - HTTP::{Request,Response}->clone can handle subclasses now.
    - HTTP::Request->url() can now undefine the URL.
    - HTTP::{Request,Response}->as_string format looks more like the HTTP
        protocol formatting now. Dashed lines above and below is gone.
    - Documented HTTP::Response->status_line method
    - Compressed HTML::Response->error_as_HTML output
    - HTTP::Status updated to latest HTTP spec. Added
        RC_REQUEST_RANGE_NOT_SATISFIABLE (416)

5.17    1997-12-02
    - All authentication handling moved out of LWP::UserAgent and into
        LWP::Authen::Basic and LWP::Authen::Digest. We now also support
        PROXY_AUTHENTICATION_REQUIRED responses.
    - HTML::Formatter will always add a blank line for <br>.
    - Avoid use of uninitialized value in HTTP::Daemon.
    - HTTP::Date allows seconds when recognizing 'ls -l' dates. This allows us
        to parse syslog time stamps.
    - HTTP::Request::Common::POST allows a hash reference as second argument
        (in addition to an array reference).
    - LWP::Simple will initialize the $ua if it is exported.
    - Various documentation updates.

5.16    1997-11-21
    - LWP::Simple::head() would die in array context because str2time was not
        imported any more.
    - HTTP::Daemon->accept now takes an optional package argument like
        IO::Socket->accept does.
    - Made HTTP::Request and HTTP::Response subclassable.
    - Added Proxy-Authorization example to lwpcook.

5.15    1997-11-06
    - New module URI::Heuristic
    - The lwp-request script now use URI::Heuristic for it's URL arguments. It
        means that 'lwp-request perl' will not get a file called "./perl" but
        will fetch the page "http://www.perl.com" or something similar. If you
        want to get the file you have to prefix it with "./". Full URLs are
        never affected by this.
    - LWP::Simple::get() will bypass LWP for simple HTTP requests. This should
        make it somewhat faster.
    - LWP::RobotUA has a new method called $ua->use_sleep() that controls how
        niceness towards the servers are enforced. Previously $ua->use_alarm()
        used to control this, but this did not work well on Win32 systems.
    - URI::URL::rel() will handle URLs to a fragment within the same document
        better. Initial patch from Nicolai Langfeldt <janl@math.uio.no>.
    - HTML::Element don't consider </th>, </tr> and </td> optional any more.
    - Added lots of modern tags to HTML::AsSubs.
    - HTTP::Request::Common will read uploaded files in binmode(). This should
        be better for Win32 systems. by <Steve_Kilbane@cegelecproj.co.uk>.

5.14    1997-10-12
    - HTML::Formatter patches from Andreas Gustafsson <gson@araneus.fi>. The
        formatters handling of whitespace is much better now. Thanks!
    - HTML::FormatText: can specify margins in the constructor.
    - URI::URL: the base will be absolutized internally now.
    - URI::URL will take advantage of void context provided by perl5.004. This
        means that using $u->path and $u->query should be safer now.
    - URI::URL->print_on defaults to STDERR now (used to be STDOUT).
    - URI::URL: removed version 3 compatibility stuff ($COMPAT_VER_3).
    - $ua->mirror should work better on dosish systems (can not rename when
        target file exists).
    - Typo in lwp-download prevented it from compiling.
    - Some minor documentations typos corrected.

5.13    1997-09-20
    - Brand new module called HTTP::Cookies. It stores cookies (Set-Cookie and
        Set-Cookie2 headers) from responses and can create appropriate Cookie
        headers for requests. It can also share cookie files with Netscape.
    - LWP::UserAgent now support the cookie_jar() attribute. When set to an
        HTTP::Cookies object, it will automatically manage the cookies sent to
        the servers. Off by default.
    - New header utility functions in HTTP::Headers::Util.
    - Win32 and OS/2 patches for the lwp-xxx utilities. Turn on binary mode
        by default (option to turn it off), avoid modifying $0, and don't be
        confused about suffixes in the script names. Contributed by Ben
        Coleman <bcoleman@mindspring.com>
    - OpenVMS patch for Font:AFM by Brad Hughes <brad@tmc.naecker.com>

5.12    1997-09-05
    - decode_entities() would sometimes introduce ";" after things that looked
        like they were entities.
    - HTML::LinkExtor knows about <applet code="...">
    - Patch from Gary Shea <shea@gtsdesign.com> that makes the tests work even
        if perl is not called "perl"
    - HTTP::Date handles 12:00PM correctly now. Patch from William York
        <william@mathworks.com>
    - HTTP::Request::Common don't quote the boundary string for
        multipart/form-data messages any more.
    - Font::AFM works for encodings where .notdef is defined to have some size.
        Documentation and efficiency update.

5.11    1997-08-06
    - Perl version 5.004 is now required for libwww-perl.
    - Win32 patches from Gurusamy Sarathy <gsar@engin.umich.edu>. Now passes
        all tests on that platform.
    - HTTPS support contributed by Josh Kronengold <mneme@mcny.com>
    - Support hex entities &#xFF;  HTML::Entities::(en|de)code only modify
        their argument in void context.
    - Fixed formatter bug with <font> tags which did not specify size.
    - Better HTML::HeadParser documentation
    - Fixed HTML::LinkExtor documentation typo spotted by Martijn.
    - HTTP::Request::Common now use CRLF for multipart/form-data

5.10    1997-06-20
    - Make '+' a reserved URL character. Decode unescaped '+' as space in
        $url->query_form().
    - Use $Config{d_alarm} to determine default for $ua->use_alarm()

5.09    1997-06-10
    - Removed the MIME modules from the distribution. They are distributed
        separately now.
    - Added a new module called HTTP::Request::Common
    - Improved HTTP::Status documentation. It is now also possible to import
        the is_client_error/is_server_error functions.
    - LWP::MediaTypes::guess_media_type() can now take an optional HTTP::Header
        parameter.
    - LWP::Protocol ensures that scheme is legal as module name.
    - LWP::Protocol::http is not as strict when trying to verify the method
        name. It now also accepts responses without a message on the status line
    - WWW::RobotRules::AnyDBM_File: Some DBMs fail to allow multiple opens of
        the same file. Patch from Mark James <jamesm@skate.org>
    - Created Bundle::LWP

5.08    1997-04-05
    - Made libwww-perl warning compatible with upcoming perl5.004beta2
        (aka 5.003_98)
    - encode_base64() did not work properly if pos() of the string to encode
        was different from 0.
    - HTML::Parser was confused about "</" when it did not start an end tag.
    - HTML::FormatPS will provide ISOLatin1Encoding in its output.
    - Calling HTML::LinkExtor->links will clear out old links.
    - url()->rel($base) would ignore the $base argument.
    - Don't croak() when setting url()->path().

5.07    1997-02-11
    - Can limit the size of the response content with $ua->max_size()
    - Added time2iso() functions to HTTP::Date.
    - Made LWP::Protocol::http more portable to the MacPerl. /./ match
        different things on MacPerl.

5.06    1997-01-27
    - URI::URL is now compatible with perl5.004 overloading.
    - HTML::HeadParser makes X-Meta-Name headers for <meta> elements that does
        not specify an 'http-equiv' attribute.
    - URI::URL::ftp does not die if Net::Domain is not installed and you ask
        for an anonymous username or password.
    - WWW::RobotRules:  The robots.txt parser did not ignore comment lines as
        it should.
    - LWP::Protocol::http is more forgiving towards servers that return bad
        responses.
    - Allow "?" before search string in gopher URLs.
    - LWP::Protocol::file did not escape funny filenames when generating HTML
        directory listings.
    - LWP::Protocol::ftp now gets the Content-Encoding correct. 'CODE'
        content in PUT requests also work now.
    - Relative locations in redirects did not work with URI::URL::strict.
    - OS/2 portability patches from Ilya Zakharevich
    - LWP::Authen::* patch from Doug MacEachern
    - Support experimental data:- URLs
    - Some tests (those using HTTP::Daemon) now die more gracefully if IO::*
        modules is not installed.

5.05    1996-12-04
    - LWP::UserAgent::simple_request: local($SIG{__DIE__}) protects us against
        user defined die handlers.
    - Use Net::Domain (instead of Sys::Hostname) to determine FQDN. It is used
        by URI::URL when it determines anonymous ftp login address.
    - lwp-download: New program in the bin directory
    - HTML::Parser: Allow '_' in attribute names. This makes it possible to
        parse Netscape's bookmarks.html file.
    - HTTP::Daemon: Fixed chunked transfer encoding and multipart content in
        get_request(). Support HTTP/0.9 clients.
    - Don't clobber regex variables when HTTP::Message delegates methods to
        the header.
    - Base64::decode_base64 now checks that the length input string to decode
        is a multiple of 4.
    - t/robot/rules-dbm.t clean up better and will use AnyDBM for dumping
    - File::CounterFile: $/ strikes again by Andreas König
    - File::Listing updates from William York <william@mathworks.com>. We can
        now parse the MS-Windows ftp server listings.
    - HTTP::Date now supports the MS-Windows 'dir' date format. Patch by
        William York.
    - LWP::MediaTypes::media_suffix will return first type in scalar context.

5.04    1996-10-22
    - Added HTTP::Daemon. This is a HTTP/1.1 server class. This means
        that libwww-perl no longer is a client library only. The HTTP::Daemon
        is also used in the new test suite.
    - HTTP::Message support the protocol() method. Used by HTTP::Daemon.
    - HTTP::Response can be constructed with a header and content as
        argument.
    - Typo corrections in the documentation.
    - File::Listing::parse_dir accepts "GMT" as timezone now.
    - HTML::Parser will call the start() method with two new parameters;
        $attrseq, $origtext.
    - Integrated HTML::FormatPS patches from Jim Stern <jstern@world.northgrum.com>
    - Class modules don't inherit from AutoLoader any more. They just import
        the AUTOLOAD method.
    - LWP::Protocol will untaints scheme before loading protocol module.
    - Digest does not send "opaque" if it was not present in the request. The
        "Extension" header is not returned any more.
    - New method: $url->crack that will return a list of the various elements
        in a URI::URL.
    - WWW::RobotRules did not use the agent() method when determining who we
        are. This affected WWW::RobotRules::AnyDBM_File parsing for robots.txt.
        Visit count did not increment for WWW::RobotRules::InCore.

5.03    1996-10-01
    - Hakan Ardo's persistent robot rules is now part of the standard
        distribution. This is still experimental and might change in the
        future. It includes the new WWW::RobotRules::AnyDBM_File class and
        updates to LWP::RobotUA.
    - HTML::Parser now supports buggy Netscape comment parsing. Enable it by
        calling $p->netscape_buggy_comment(1). The previous version of the
        parser could also (under very unlucky and unlikely circumstances) call
        the $self->comment() method several times for the same comment text.
    - HTML::Parser: Use new $p->eof to signal end of document instead of
        $p->parse(undef).
    - HTML::Element::starttag() is now smarter about which quotes it use around
        attribute values.
    - New HTTP::Response methods: current_age(), freshness_lifetime(),
        is_fresh(), fresh_until().
    - HTTP::Message:  New method ($mess->content_ref) which will return a
        reference to the current content.
    - URI::URL:  New method ($url->rel) which does the opposite of abs().
        Example: url("http://host/a/b/c", "http://host/c/d/e")->rel would
        return url("../../a/b/c", "http://host/c/d/e"). Thanks, Nicolai
        Langfeldt <janl@ifi.uio.no>
    - URI::URL:  $url->query_form can now take array references as value
        specification. For instance: $url->query_form(foo => ['bar', 'baz']
    - Avoid '"my" variable $var masks earlier declaration in same scope'
        warnings in perl5.003_05.

5.02    1996-09-11
    - lwp-rget:  Initialize proxy settings from environment
    - HTML::Entities::encode_entities: Don't encode $ and %
    - HTML::LinkExtor::links: Now works when no links were found.
    - HTTP::Headers::as_string: Allow \n in header value

5.01    1996-08-01
    - Updated ftp protocol module to be compatible with Net::FTP version 2.00
        (the version found in libnet-1.00)
    - New HTML parser module called HTML::LinkExtor
    - Various documentation typo corrections. Thanks, Bob Dalgleish.
    - HTML::HeadParser updates 'Content-Base' instead of 'Base'. It also
        updates the 'Link' header based on <link ...>
    - HTTP::Headers and HTTP::Status updated according to
        draft-ietf-http-v11-spec-06
    - HTTP::Headers can now use "_" as alternative to "-" in field names.
    - HTTP::Response::base now looks for 'Content-Base', 'Content-Location' and
        'Base' headers.
    - Avoid warning in LWP::MediaTypes if $ENV{HOME} is not defined.
    - The new $ua->parse_head() method can be used to turn off automatic
        initialization of response headers from the <HEAD> section of HTML
        documents.
    - Added eq() method for URI::URL objects
    - The HTML::Formatter recovers even if a handle method is not defined for
        all tags found during traversal

5.00    1996-05-26
    - LWP::Simple::head() now return something useful in scalar context.
    - Rewritten the HTML::Parse stuff. Introduced the HTML::Parser class that
        will tokenize a HTML document. The rest of the old HTML::Parse
        functionality has moved to HTML::TreeBuilder class. Note, that the HTML
        stuff is still alpha.
    - Implemented HTML::HeadParser. This is a lightweight parser for the <HEAD>
        section of a HTML document.
    - HTML::Element had problem with presenting things like <foo bar="bar">.
    - HTML::Entities: Included additional ISO-8859/1 entities listed in RFC1866.
    - HTML::AsSubs exported 'header' instead of 'head'
    - We know about a few more of the HTML 3.2 element.
    - HTTP::Date had problems with years before 1970, because Time::Local went
        into an infinite loop. Check for this.
    - Added $header->title method.
    - Made $header->authorization_basic return "uname:passwd" in scalar context
    - LWP::Protocol::collect() will let the HTML::HeadParser look at the
        document content as it arrives. This will initialize headers from
        elements like <base href="...">, <title>...</title> and
        <meta http-equiv="..." ...>.
    - Simplified $response->base implementation, because we don't have to look
        into the content any more.
    - Added -quiet option to lwp-rget
    - Typo fixes and some documentation additions.

4.999   1996-05-09
    - BETA release for version 5. (5b13)
    - Made URI::URL::strict(0) the default. I got tired of all this eval { }
        stuff just to recover. The URI::URL::strict'ness also determine if
        calling some standard method that happens to be illegal for some
        protocol scheme will croak or just be ignored.
    - Ensure correct $INPUT_RECORD_SEPARATOR and $OUTPUT_RECORD_SEPARATOR at
        places where we <> or print.
    - Always localize $_ before any 'while(<FILE>) {}'-loops
    - Implemented $protocol->collect_once() and simplified several of the
        protocol implementations by using it.
    - The HTML parser used to get it wrong if you were unlucky about the
        breakup of the text. An example of broken behaviour was this:
            $html = parse_html "<!-- A comment -";
            $html = parse_html "-> and some text.";
    - The HTML parser does not ignore whitespace-only text any more.
    - HTML::Parse warnings are now optional and turned off by default.
    - New start for $html->as_HTML().
    - Fixed some typos

4.99    1996-04-24
    - BETA release for version 5 (5b12)
    - New utility program called 'lwp-rget'.
    - $response->base was broken for HTML documents
    - New fancy LWP::Debug import() method. Can now turn on debugging with
        "use LWP::Debug '+';"
    - Trap exceptions (die) from the response callback routine
    - The RobotUA now requires an e-mail address of the person responsible
        for the robot.
    - New $ua->from() method.
    - Support for gopher Index-Search (gopher type '7' requests). Contributed
        by Harry Bochner <bochner@das.harvard.edu>
    - Cleaned up white-space usage in the source.

4.98    1996-03-03
    - BETA release for version 5. (5b11)
    - Implemented a NNTP protocol module. The library can now fetch and post
        news articles.
    - More documentation
    - Don't look at the URI header for redirects
    - New $res->base() method for HTTP::Responses
    - Graham Barr's patch to File::Listing to make it more OO internally
    - content_type() return value is canonicalized
    - $ua->request() does not die on bad URLs any more
    - LWP::MediaTypes merge all media.types files that if finds
    - FTP request with content to file or callback did not work
    - The value of HTTP Host: header is now $url->netloc;
    - The URI::URL constructor now accept URLs wrapped up in "<>"
    - $url->abs() now has a second optional argument that makes it accept that
        relative URLs can have scheme, i.e. treat "http:img.gif" as a relative
        URL.
    - Added prototypes to the HTTP::Status::is_xxx() functions
    - Added prototypes to the MIME:: encoding/decoding functions
    - Always return scheme for mailto and news URLs (as_string)
    - RobotRules patches from Henry A Rowley.
    - More tests
    - <SMALL> and <BIG> again

0.10    1996-03-14
    - BETA release for version 5. (5b10)
    - GET ftp://host/doc was never successful for normal files.
    - LWP::Socket: read_until() did not notice EOF condition. I.e. if a HTTP
        server closed the connection before any output was generated, the we
        continued to read 0 bytes in a busy loop until the alarm() killed us.
    - Added support for Digest Access Authentication. by Doug MacEachern <dougm@osf.org>.
    - Makefile.PL: check for MD5 library
    - No longer print message content in HTTP::Response::error_as_HTML()
    - Access to "file:/path" gave warning when the environment variable
        no_proxy was set.
    - The http-post test sends a Content-Type header. Some servers hang if
        this header is missing.
    - HTML::Parse:
        - allow <SMALL> and <BIG> tags
        - allow empty attribute values

0.09    1996-03-05
    - BETA release for version 5. (5b9)
    - Started to write on the libwww-perl cookbook (lwpcook.pod)
    - The URI::URL module now exports the function url(). This is an
        alternative (easy to use) constructor function.
    - Expanding relative file URLs starting with "#" did not work.
    - Fixed autoloaded DESTROY problem by adding empty DESTROY routine to URI::URL.
    - Does not try generate password for ftp-URLs unless the username is
        "anonymous" or "ftp"
    - The LWP::Simple user agent proxy settings are initialized from the proxy
        environment variables.
    - LWP::Protocol::ftp: Use the Net::FTP library to access ftp servers.
        Convert directories to HTML on request (Accept: text/html).
    - New module HTTP::Negotiate
    - New module File::Listing
    - HTTP::Date::str2time can parse a few more formats, like the 'ls -l' format
        and ISO 8601. The function now also takes an optional second parameter
        which specify a default time zone.
    - Added prototypes to the HTTP::Date functions.
    - The library adds a timestamp to responses ("Client-Date")
    - HTTP::Status:  Updated to proposed HTTP/1.1
    - HTTP::Headers: Updated to proposed HTTP/1.1
    - LWP::Protocol::http:  Updated to HTTP/1.1 methods
    - Took out stringify overloading in HTML::Element.

0.08    1996-02-26
    - BETA release for version 5. (5b8)
    - Renamed functions using thisStyleOfNames to this_style_of_names.
        Provided a script called 'update_from_5b7'
    - Renamed the 'request' and 'mirror' scripts to 'lwp-request' and
        'lwp-mirror'. The GET, POST, HEAD aliases for 'lwp-request' are the same.
    - Implemented LWP::RobotUA
    - Class name for RobotRules did not match the file name
    - URI::URL
        - perl5.002gamma is required (because use vars).
        - The leading slash in now part of the path if it is present.
        - More documentation
        - Use AutoLoader to speed things up.
        - New class URI::URL::_login and made telnet, rlogin, tn3270 subclasses
            from this one.
        - URI::URL::wais is better supported.
        - URI::URL::news is better supported.
        - New URI::URL::mailto methods: user/host
    - HTTP::Date::time2str now works correctly with '0' as argument
    - HTTP::Message delegates unknown methods to the headers.
    - HTTP::Request::uri is an alias for HTTP::Request::url. Can set the URL
        to undef.
    - Added convenience methods to HTTP::Headers for easy access to frequently
        used headers.
    - Simplified LWP::Debug
    - Use standard AutoLoader for LWP::IO functions.
    - Played with the profiler (Devel::DProf) and made some things go quicker.
    - Included the File::CounterFile module. Excluded Mail::Cap module as it
        is also part of the MailTools package.

0.07    1996-02-05
    - BETA release for version 5. (5b7)
    - Perl5.002 is required now
    - Rewrite of the URI::URL module (version 4.00)
        - escaping/unsafe stuff redone (and removed)
        - URI::URL::_generic moved out of URL.pm
        - netloc, path, params, query is now stored internally in escaped form
        - new methods for URI::URL::_generic are:
            - epath
            - eparams
            - equery
            - path_components
            - absolute_path
        - new methods for URI::URL::http are:
            - keywords
            - query_form
        - new methods for URI::URL::file are:
            - newlocal
            - local_path
            - unix_path
            - dos_path
            - mac_path
            - vms_path
    - URI::Escape now semi-compile regular expressions (by evaling an
        anonymous sub). Same technique is also used in HTML::Entities.
    - HTTP::Date parser rewritten using regular expressions.
    - HTTP::Headers->as_string() now croaks if any field values contain newline.
    - HTTP::Status constants use empty prototype.
    - Font metrics moved to a new subdirectory (lib/Font/Metrics)
    - Don't use the VERSION script any more (even if it was very clever)
    - HTML::Entities will now export the names decode_entities() and
        encode_entities().
    - Andreas Koenig's black patch to HTML::Element.
    - The HTML::Formatter now knows about <menu> and <dir> tags
    - The construct "defined ref($arg)" did not work on perl5.002 because ref
        now always return something defined.
    - LWP::UserAgent sends by default a 'User-Agent' header.
    - LWP::Simple sends 'User-Agent' header to servers.
    - Updated the LWP::Socket module to use the new Socket.pm interface.
    - LWP::Protocol::http sends the new HTTP/1.1 'Host' header.
    - LWP::Protocol::file use $url->local_path to get a file to open. It also
        inserts a <BASE> tag in directories instead of a redirect.
    - MIME::Base64 routines can be called as MIME::Base64::encode() and
        MIME::Base64::decode(). Same kind of thing for QuotedPrint.

0.06    1995-11-06
    - BETA release for version 5. (5b6)
    - Installation should work better for those that still runs perl4 as 'perl'.
        The mirror script is not installed by default.
    - LWP::Socket::_getaddress() Numerical IP addresses did not work.
    - LWP::Socket::pushback() did not work. This also avoids the
        bad pp_select() core dump from perl.
    - LWP::IO now also selects on socket exceptions.
    - HTML::Parse:  Ignore <!DOCTYPE ...> regardless for case. Some bad
        insertElement() calls made infinite loops.
    - The uri.t test works better for places where /tmp is a sym-link.

0.05    1995-09-16
    - BETA release for version 5. (5b5)
    - newlocal URI::URL does not put "//localhost" into the URLs any longer.
    - The request program: New -o option to reformat the HTML code.
        - New -C option to provide credentials on the command line.
        - The -b option never worked.
    - LWP::Protocol::file now returns redirect for access to directories where
        the trailing slash is missing.
    - Speedups and bug fixes in the HTML parser.
    - The parser now understands some more deprecated tags.
    - HTML::Elements are now stringified using perl overloading.
    - The interface to the traverse() callback has changed.
    - Implemented HTML formatters for plain text and Postscript.
    - Added lib/Font stuff to support the Postscript formatter.
    - Inspired by Tim Bunce, I implemented the HTML::AsSubs module.
    - The local/get test does not use /etc/passwd any more.
    - Changed package name to libwww-perl-5xx
    - Made LWP::Protocol::ftp actually transfer data
    - Implemented methods for LWP::Socket to act as a server:
        bind(), listen(), accept(), getsockname(), host(), port()

0.04    1995-09-06
    - Implemented modules to parse HTML.
    - Implemented Mail::Cap which will become part of the MailTools package.
    - Moved Base64 to MIME::Base64.
    - Reimplemented MIME::Base64 by using [un]pack("u",...)
    - Implemented LWP::MIME::QuotedPrint for completeness' sake. Routine names
        has changed as suggested by Tim Bunce.
    - LWP::MediaType reads default types from media.types file.
    - guessMediaType() now also returns encodings. New function mediaSuffix()
    - Pass $url to $ua->getBasicCredentials(). This also fixes security hole
        with the old implementation of getBasicCredentials().
    - LWP::Protocol::file now sets Content-Encoding headers
    - Allow request content to be provided by a callback routine.
    - Fix bug that prevented response callback to work. The first parameter
        (data) is no longer a reference, because $_[0] is already a reference.
        Don't callback unless successful response. Callbacks during redirects
        was confusing.
    - URI::URL. Remove port from netloc if it is the default port. Don't use
        anything, just require.
    - HTTP::Message->addContent() does not need a reference parameter.
    - LWP::Socket->open() has been renamed top LWP::Socket->connect()
    - LWP::Socket->close has gone.
    - Implemented new method LWP::Socket->read() that returns as fast as it has
        some data to offer.
    - Implemented LWP::Socket->pushback().
    - Does not die in LWP::UserAgent->request()
    - LWP::Socket now use LWP::IO for low level IO
    - Implemented LWP::TkIO as a replacement module for LWP::IO when using Tk.
    - $ua->redirectOK() for checking redirects
    - reorganized tests in the "t" directory.

0.03    1995-08-11
    - Included RobotRules.pm from Martijn Koster
    - New module URI::Escape (URI::URL use this module for default escaping)
        that provide the uri_escape() and uri_unescape() functions.
    - Setting $url->scheme now changes the class of the object.
    - Made $httpurl->user() and $httpurl->password() illegal. Likewise for other URL schemes.
    - Reorganisation as discussed on <libwww-perl@ics.uci.edu>
        - LWP::Date       --> HTTP::Date
        - LWP::MIMEheader --> HTTP::Headers
        - LWP::StatusCode --> HTTP::Status
        - LWP::Message    --> HTTP::Message
        - LWP::Request    --> HTTP::Request
        - LWP::Response   --> HTTP::Response
        - LWP::MIMEtypes  --> LWP::MediaTypes
    - HTTP::Date parses ctime format with missing timezone as suggested by Roy
        Fielding <fielding@beach.w3.org>
    - HTTP::Status and LWP::MediaTypes exports their functions by default.
    - Split up the URI::URL module. Schemes are implemented by separate files
        that are autoloaded when used. Self test moved to "t/uri.t".
    - Applied patch from Marc Hedlund <hedlund@best.com>
    - Update the @header_order according to the August 3rd draft.
    - Added Response Header fields: 'Location', 'Public', 'Retry-After',
        'Server', and 'WWW-Authenticate'.
    - Moved 'unknown header' handling from &scan to &header. The old
        implementation was forcing all unknown header-words to begin with an
        uppercase (as it should be), but disallowed other uppercase letters.
    - updates the status code messages under the August 3rd HTTP/1.0 draft.
        '203' became 'Non-Authoritative Information', '303' became 'See Other',
        and a new code, '411 Authorization Refused', was added.
    - Can remove multiple headers with single removeHeader() call in MIMEheader.
    - Can assign multiple field/value pairs in header() method of MIMEheader.
    - A field with multiple values is printed as separate values in
        MIMEheader::as_string().
    - LWP::Response contain new attributes: previous() and request(). These
        attributes are updated by the UserAgent.
    - Appended \n to some die statements in Socket so that line numbers are
        suppressed in error messages.
    - Made UserAgent::clone work for reference members
    - Check for redirect loops and multiple authorization failures by
        examination of the response chain.
    - Use "\015\012" instead of "\r\n" in protocol modules. Some systems define
        \r and \n differently.
    - request program can now handle documents that needs authorization by
        prompting the user for username/password. Added new -S option to print
        request/response chain.

0.02    1995-07-25
    - Included URI::URL in the release
    - Incorporated Makemake.PL and VERSION from Andreas Koenig <koenig@mind.de>
        As a result of this the following things have changed:
        - programs in "bin" are extracted from .PL-files
        - reintroduced "lib"
        - "test" has been renamed as "t"
        - test programs in "t" has been made Test::Harness compatible
        - we now have a MANIFEST file
        - no more need for update_version, make-dist, lwp-install
    - Renamed bin/get to bin/request. Links to it are now all upper case.
    - Proxy support in bin/request (provided by Martijn Koster)
    - UserAgent can now load proxy settings from environment
    - LWP::Protocol::ftp is under way but not really finished
    - Implemented LWP::Protocol::gopher
    - Implemented LWP::Protocol::mailto
    - Fixed proxy typo

0.01    1995-07-17
    - Don't lose first line of HTTP/0.9 requests
    - LWP::Socket use syswrite() for writing
    - Added RC_* documentation to LWP::StatusCode
    - LWP::Date now use hash to look up month numbers
    - Added -f option to "get"
    - Untabify
    - Added a "TODO" list
    - Fixed various typos
    - Reorganized directories.
        - Moved LWP.pm up.
        - Moved file.pm and http.pm into the LWP::Protocol directory.
        - Moved LWP out of the lib directory and removed lib.
    - Implemented the "get" and "mirror" scripts in the "bin" directory.
    - Implemented "install-lwp", "update_version" and "make-dist". The
        library version number is found in the VERSION file.
    - Always adds 1900 to the year in LWP::Date
    - In LWP::MIMEheader:  Implemented clone(), removeHeader() and scan()
        methods. Reimplemented asString. Removed asMIME(). Moved "Good
        Practice" into this file, and reimplemented it.
    - Moved "header" and "content" into LWP::Message class. This change
        made LWP::Request and LWP::Response much simpler. Made clone()
        method actually work.
    - LWP::Protocol::implementor does not die if it cannot load package.
    - Moved UserAgent convenience methods into LWP::Simple. Made LWP::Simple
        export LWP::StatusCode symbols and functions.
    - Implemented $ua->isProtocolSupported($scheme) method.
    - Nicer directory listing in LWP::Protocol::file.pm
    - Rely on URI::URL 3.00 behaviour for $url->full_path
    - Library version number now in LWP.pm. You should be able to say
        "use LWP 1.0;" if you need at least this version.
    - Various cleanups and arranging layout as I like it. Use fooBar-style
        (as opposed to foo_bar style) everywhere. This means that
        as_string() now is called asString().
    - Added more documentation.
    - Removed lot of redundant & before function calls.
    - $this --> $self
    - &collector passes content as a reference, don't want to copy so much
    - parameterlist to collect callback has been rearranged
    - Response::addContent gets a reference to the data
    - Added some callback documentation to UserAgent.pm
    - Protocol::file now uses the collector
    - Introduced LWP::Simple
    - Added basic authentication support
    - Added mirroring of single documents
    - Change Protocol construction from whacky URL.pm (constructor returns
        subclass) to more normal C++'ish way.
    - Minor cleanups from printed code inspection
    - Added redirection resolution
    - Added optional autoloading of protocols
    - Separated socket stuff into separate module
    - Added HTTP proxy support
    - Made alarm handling optional
    - Added a LWP::Message for completeness sake
    - Added LWP::MemberMixin to reduce code duplication
    - Cosmetic changes to LWP::Date
    - Renamed LWP::Error to LWP::StatusCode
    - Renamed LWP::MIME to LWP::MIMEtype
    - Changed the tests to cope with all this
    - Changed the socket reading to use sysread. This will have to go into a
        module of its own.
    - Mentioned on libwww-perl that I had changed the classes around lots.
