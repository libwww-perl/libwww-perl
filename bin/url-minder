#!/usr/bin/perl

use strict;
use warnings;

use Fcntl;
use AnyDBM_File;
use MD5;
use LWP;

my @mess;
my %urls;
my $RECEIVER = 'mailto:yourself@somewhere.edu';
tie %urls, 'AnyDBM_File', 'urls', O_CREAT|O_RDWR, 0644 or
    die "Can't open urls: $!";

# If arguments, add them as URLs to check in the database
for (@ARGV) { $urls{$_} = "NEW"; }

my $ua = LWP::UserAgent->new;

my $url;
for $url (keys %urls) {
   print "Checking $url...\n";
   my $res = $ua->request(HTTP::Request->new(GET => $url));
   if ($res->is_success) {
	my $hash = "MD5:" . MD5->hexhash($res->content);
	if ($hash ne $urls{$url}) {
           push(@mess, "$url changed");
	   $urls{$url} = $hash;
        }
        else {
	   print "  unchanged\n";
        }
   }
   elsif ($res->code >= 500) {  # local failure, better luck next time
        print "  ", $res->code, " ", $res->message, "\n";
	my $count = $urls{$url};
	$count = 5 unless $count =~ /^\d+$/;
	if ($count > 0) {
	    print "  will still try $count more times\n";
	    $urls{$url} = $count - 1;
            next;
        }
	print "  giving up\n";
	push(@mess, "$url: Giving up: " . $res->message);
        delete $urls{$url};
   }
   else {
	print "  bad\n";
	push(@mess, "$url: " . $res->code . " " . $res->message);
	delete $urls{$url};
   }
}

if (@mess) {
    my $req = HTTP::Request->new(POST => $RECEIVER);
    $req->header(Subject => 'URL Notification service');
    $req->content(join("\n", @mess, ""));
    $ua->request($req)->is_success or die "Can't POST to $RECEIVER";
}
